<%- include('../partials/admin/header') %>

<style>
  /* Base styles */
  .content-wrapper {
    margin-left: 250px;
    padding: 20px;
    margin-top: 60px;
    background-color: #F5F1E9;
    min-height: calc(100vh - 60px);
    transition: margin-left 0.3s ease;
  }

  .table th, .table td {
    vertical-align: middle;
    white-space: nowrap;
  }

  .toggle-switch {
    position: relative;
    display: inline-block;
    width: 4rem;
    height: 2rem;
  }
  
  .toggle-switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }
  
  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
    border-radius: 2rem;
  }
  
  .slider:before {
    position: absolute;
    content: "";
    height: 1.5rem;
    width: 1.5rem;
    left: 0.25rem;
    bottom: 0.25rem;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
  }
  
  input:checked + .slider {
    background-color: #5C4033;
  }
  
  input:focus + .slider {
    box-shadow: 0 0 1px #5C4033;
  }
  
  input:checked + .slider:before {
    transform: translateX(2rem);
  }
  
  .status-label {
    margin-left: 1rem;
    font-weight: 500;
  }
  
  .status-active {
    color: #28a745;
  }
  
  .status-blocked {
    color: #dc3545;
  }

  .pagination {
    justify-content: center;
    margin-top: 1rem;
  }
  
  .pagination .page-item.active .page-link {
    background-color: #5C4033;
    border-color: #5C4033;
  }
  
  .pagination .page-link {
    color: #5C4033;
  }
  
  .pagination .page-link:hover {
    color: #5C4033;
    background-color: #F5F1E9;
  }

  .search-wrapper {
    margin-bottom: 1rem;
    width: 100%;
  }
  
  .search-input {
    border-color: #5C4033;
  }
  
  .search-btn {
    background-color: #5C4033;
    border-color: #5C4033;
  }
  
  .search-btn:hover {
    background-color: #3d2a23;
    border-color: #3d2a23;
  }

  /* Card layout for mobile */
  .user-card {
    display: none;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    margin-bottom: 15px;
    padding: 15px;
    background: white;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }

  .user-card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
    padding-bottom: 10px;
    border-bottom: 1px solid #eee;
  }

  .user-name {
    font-weight: bold;
    font-size: 1.1em;
    color: #5C4033;
  }

  .user-details {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 10px;
    margin-bottom: 15px;
  }

  .detail-item {
    display: flex;
    flex-direction: column;
  }

  .detail-label {
    font-size: 0.8em;
    color: #6c757d;
    margin-bottom: 2px;
  }

  .detail-value {
    font-weight: 500;
  }

  .user-status-container {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 10px;
    background-color: #f8f9fa;
    border-radius: 5px;
  }

  /* Responsive breakpoints */
  
  /* Large tablets and small desktops */
  @media (max-width: 1200px) {
    .content-wrapper {
      margin-left: 200px;
    }
    
    .table th, .table td {
      font-size: 0.9em;
      padding: 8px;
    }
  }

  /* Tablets */
  @media (max-width: 992px) {
    .content-wrapper {
      margin-left: 0;
      padding: 15px;
      margin-top: 60px;
    }
    
    .table-responsive {
      font-size: 0.85em;
    }
    
    .search-wrapper {
      max-width: 100%;
    }
  }

  /* Small tablets and large phones */
  @media (max-width: 768px) {
    .content-wrapper {
      padding: 10px;
    }
    
    /* Hide table, show cards */
    .table-responsive {
      display: none;
    }
    
    .user-card {
      display: block;
    }
    
    .toggle-switch {
      width: 3rem;
      height: 1.5rem;
    }
    
    .slider:before {
      height: 1rem;
      width: 1rem;
      left: 0.2rem;
      bottom: 0.2rem;
    }
    
    input:checked + .slider:before {
      transform: translateX(1.5rem);
    }
    
    .status-label {
      margin-left: 0.5rem;
      font-size: 0.9rem;
    }
    
    h1 {
      font-size: 1.5em;
      margin-bottom: 20px;
    }
  }

  /* Mobile phones */
  @media (max-width: 576px) {
    .content-wrapper {
      padding: 8px;
    }
    
    .user-details {
      grid-template-columns: 1fr;
    }
    
    .pagination {
      flex-wrap: wrap;
      justify-content: center;
    }
    
    .pagination .page-item {
      margin: 2px;
    }
    
    h1 {
      font-size: 1.3em;
      text-align: center;
    }
    
    .breadcrumb {
      font-size: 0.9em;
    }
  }

  /* Extra small devices */
  @media (max-width: 400px) {
    .content-wrapper {
      padding: 5px;
    }
    
    .user-card {
      padding: 10px;
    }
    
    .search-wrapper .input-group {
      flex-wrap: wrap;
    }
    
    .search-wrapper .form-control {
      margin-bottom: 5px;
    }
  }

  /* Landscape orientation adjustments */
  @media (max-height: 500px) and (orientation: landscape) {
    .content-wrapper {
      margin-top: 50px;
      padding: 10px;
    }
  }
</style>

<div class="content-wrapper">
  <%- include('../partials/admin/sidebar', { currentPage: 'users' }) %>
  
  <div class="content-header">
    <div class="container-fluid">
      <div class="row mb-2">
        <div class="col-12 col-sm-6">
          <h1 class="m-0" style="color: #5C4033;">User Management</h1>
        </div>
        <div class="col-12 col-sm-6">
          <ol class="breadcrumb float-sm-right">
            <li class="breadcrumb-item"><a href="/admin/dashboard" style="color: #5C4033;">Home</a></li>
            <li class="breadcrumb-item active" style="color: #5C4033;">Users</li>
          </ol>
        </div>
      </div>
    </div>
  </div>

  <section class="content">
    <div class="container-fluid">
      <div class="row">
        <div class="col-12">
          <div class="card" style="border-color: #5C4033;">
            <div class="card-header" style="background-color: #5C4033; color: white;">
              <div class="d-flex justify-content-between align-items-center flex-wrap">
                <h3 class="card-title mb-2 mb-md-0">User List</h3>
                <div class="search-wrapper">
                  <form action="/admin/users" method="GET" class="d-flex">
                    <div class="input-group">
                      <input type="text" name="search" class="form-control search-input" placeholder="Search users..." value="<%= searchQuery %>">
                      <div class="input-group-append">
                        <button class="btn btn-light search-btn" type="submit">
                          <i class="fas fa-search"></i>
                        </button>
                        <% if (searchQuery) { %>
                          <a href="/admin/users?page=1" class="btn btn-light search-btn" title="Clear Search">
                            <i class="fas fa-times"></i>
                          </a>
                        <% } %>
                      </div>
                    </div>
                  </form>
                </div>
              </div>
            </div>
            
            <div class="card-body">
              <!-- Desktop/Tablet Table View -->
              <div class="table-responsive">
                <table id="usersTable" class="table table-bordered table-striped">
                  <thead>
                    <tr style="background-color: #5C4033; color: white;">
                      <th>#</th>
                      <th>Username</th>
                      <th>Email</th>
                      <th class="d-none d-md-table-cell">Phone</th>
                      <th class="d-none d-lg-table-cell">Registration Date</th>
                      <th>Status</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% if (users && users.length > 0) { %>
                      <% users.forEach((user, index) => { %>
                        <tr>
                          <td><%= (currentPage - 1) * 5 + index + 1 %></td>
                          <td><strong><%= user.username %></strong></td>
                          <td><%= user.email %></td>
                          <td class="d-none d-md-table-cell"><%= user.phone || 'Not provided' %></td>
                          <td class="d-none d-lg-table-cell"><%= new Date(user.createdAt).toLocaleDateString('en-US', { 
                            year: 'numeric', 
                            month: 'short', 
                            day: 'numeric' 
                          }) %></td>
                          <td>
                            <label class="toggle-switch">
                              <input type="checkbox" class="user-status-toggle" 
                                     data-user-id="<%= user._id %>" 
                                     <%= user.isBlocked ? '' : 'checked' %>>
                              <span class="slider"></span>
                            </label>
                            <span class="status-label <%= user.isBlocked ? 'status-blocked' : 'status-active' %>">
                              <%= user.isBlocked ? 'Blocked' : 'Active' %>
                            </span>
                          </td>
                        </tr>
                      <% }); %>
                    <% } else { %>
                      <tr>
                        <td colspan="6" class="text-center">No users found</td>
                      </tr>
                    <% } %>
                  </tbody>
                </table>
              </div>

              <!-- Mobile Card View -->
              <div class="mobile-cards">
                <% if (users && users.length > 0) { %>
                  <% users.forEach((user, index) => { %>
                    <div class="user-card">
                      <div class="user-card-header">
                        <div class="user-name"><%= user.username %></div>
                        <span class="badge <%= user.isBlocked ? 'bg-danger' : 'bg-success' %>">
                          #<%= (currentPage - 1) * 5 + index + 1 %>
                        </span>
                      </div>
                      
                      <div class="user-details">
                        <div class="detail-item">
                          <span class="detail-label">Email</span>
                          <span class="detail-value"><%= user.email %></span>
                        </div>
                        <div class="detail-item">
                          <span class="detail-label">Phone</span>
                          <span class="detail-value"><%= user.phone || 'Not provided' %></span>
                        </div>
                        <div class="detail-item">
                          <span class="detail-label">Registration Date</span>
                          <span class="detail-value"><%= new Date(user.createdAt).toLocaleDateString('en-US', { 
                            year: 'numeric', 
                            month: 'short', 
                            day: 'numeric' 
                          }) %></span>
                        </div>
                      </div>
                      
                      <div class="user-status-container">
                        <label class="toggle-switch">
                          <input type="checkbox" class="user-status-toggle" 
                                 data-user-id="<%= user._id %>" 
                                 <%= user.isBlocked ? '' : 'checked' %>>
                          <span class="slider"></span>
                        </label>
                        <span class="status-label <%= user.isBlocked ? 'status-blocked' : 'status-active' %>">
                          <%= user.isBlocked ? 'Blocked' : 'Active' %>
                        </span>
                      </div>
                    </div>
                  <% }); %>
                <% } else { %>
                  <div class="text-center p-4">
                    <p>No users found</p>
                  </div>
                <% } %>
              </div>
              
              <!-- Pagination -->
              <% if (totalPages > 1) { %>
                <nav aria-label="Page navigation" class="mt-4">
                  <ul class="pagination flex-wrap">
                    <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                      <a class="page-link" href="/admin/users?page=<%= currentPage - 1 %><%= searchQuery ? '&search=' + searchQuery : '' %>" aria-label="Previous">
                        <span class="d-none d-sm-inline">Previous</span>
                        <span class="d-sm-none">Prev</span>
                      </a>
                    </li>
                    
                    <% for (let i = 1; i <= totalPages; i++) { %>
                      <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                        <a class="page-link" href="/admin/users?page=<%= i %><%= searchQuery ? '&search=' + searchQuery : '' %>"><%= i %></a>
                      </li>
                    <% } %>
                    
                    <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                      <a class="page-link" href="/admin/users?page=<%= currentPage + 1 %><%= searchQuery ? '&search=' + searchQuery : '' %>" aria-label="Next">
                        <span class="d-none d-sm-inline">Next</span>
                        <span class="d-sm-none">Next</span>
                      </a>
                    </li>
                  </ul>
                </nav>
              <% } %>
              
              <div class="text-center mt-3">
                <p>Showing <%= users.length %> of <%= totalUsers %> users</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('.user-status-toggle').forEach(toggle => {
      toggle.addEventListener('change', async function (e) {
        const userId = this.dataset.userId;
        const isCurrentlyActive = this.checked;
        const actionText = isCurrentlyActive ? 'unblock' : 'block';
        const switchElement = this;
        const statusLabel = switchElement.closest('td, .user-status-container').querySelector('.status-label');

        const result = await Swal.fire({
          title: `Confirm ${actionText}?`,
          text: isCurrentlyActive
            ? "Are you sure you want to unblock this user? They will regain access to their account."
            : "Are you sure you want to block this user? They won't be able to access their account",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: isCurrentlyActive ? '#28a745' : '#dc3545',
          cancelButtonColor: '#6c757d',
          confirmButtonText: isCurrentlyActive ? 'Yes, unblock user' : 'Yes, block user',
          cancelButtonText: 'Cancel'
        });

        if (result.isConfirmed) {
          try {
            const response = await fetch(`/admin/users/toggle-block/${userId}`, {
              method: 'PATCH',
              headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
              }
            });
            const data = await response.json();

            if (data.success) {
              Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: data.message,
                confirmButtonColor: '#5C4033',
                customClass: {
                  confirmButton: 'btn btn-success'
                }
              });
              
              statusLabel.textContent = data.isBlocked ? 'Blocked' : 'Active';
              statusLabel.className = `status-label ${data.isBlocked ? 'status-blocked' : 'status-active'}`;
            } else {
              switchElement.checked = !isCurrentlyActive;
              Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: data.message || 'Something went wrong',
                confirmButtonColor: '#5C4033',
                customClass: {
                  confirmButton: 'btn btn-danger'
                }
              });
            }
          } catch (error) {
            console.error('Fetch Error:', error);
            switchElement.checked = !isCurrentlyActive;
            Swal.fire({
              icon: 'error',
              title: 'Error!',
              text: 'Server error occurred',
              confirmButtonColor: '#5C4033',
              customClass: {
                confirmButton: 'btn btn-danger'
              }
            });
          }
        } else {
          switchElement.checked = !isCurrentlyActive; 
        }
      });
    });
  });
</script>

<%- include('../partials/admin/footer') %>