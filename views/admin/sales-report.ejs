<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CHOCOLUXE - Sales Report</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: 'Nunito Sans', sans-serif;
            margin: 0;
            background-color: #f5e8d4;
            overflow-x: hidden;
        }
        .content {
            margin-left: 250px;
            padding: 20px;
            min-height: calc(100vh - 60px);
        }
        .card {
            background-color: #fff9e6;
            border: none;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-bottom: 20px;
        }
        .card-title {
            color: #4a2c2a;
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 10px;
        }
        .card-value {
            color: #4a2c2a;
            font-size: 1.8rem;
            font-weight: 700;
        }
        .filter-card {
            background-color: #fff9e6;
            border: none;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            padding: 15px;
            margin-bottom: 20px;
        }
        .btn-chocolate {
            background-color: #4a2c2a;
            color: #fff;
            border: none;
        }
        .btn-chocolate:hover {
            background-color: #3a1c1a;
            color: #fff;
        }
        .btn-outline-chocolate {
            color: #4a2c2a;
            border-color: #4a2c2a;
            background-color: transparent;
        }
        .btn-outline-chocolate:hover {
            background-color: #4a2c2a;
            color: #fff;
        }
        .table {
            background-color: #fff9e6;
            border-radius: 10px;
        }
        .table th, .table td {
            color: #4a2c2a;
        }
        .table thead th {
            background-color: #d1a876;
            color: #fff;
            border: none;
        }
        .table-striped tbody tr:nth-of-type(odd) {
            background-color: rgba(209, 168, 118, 0.1);
        }
        .chart-container {
            position: relative;
            height: 300px;
            width: 100%;
        }
        .date-range-picker {
            border: 1px solid #d1a876;
            border-radius: 5px;
            padding: 8px 12px;
            background-color: #fff;
            color: #4a2c2a;
        }
        .download-btn {
            margin-right: 10px;
        }
        @media (max-width: 768px) {
            .content {
                margin-left: 60px;
            }
            .card-value {
                font-size: 1.5rem;
            }
        }
    </style>
</head>
<body>

    <%- include('../partials/admin/header') %>

    <%- include('../partials/admin/sidebar', { activePage: 'sales-report' }) %>

    <div class="content">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 style="color: #4a2c2a;">Sales Report</h2>
        </div>

        <div class="filter-card mb-4">
            <form action="/admin/sales-report" method="GET" class="row g-3 align-items-end">
                <div class="col-md-3">
                    <label for="filter" class="form-label">Report Type</label>
                    <select name="filter" id="filter" class="form-select" onchange="toggleDateFields()">
                        <option value="daily" <%= filterType === 'daily' ? 'selected' : '' %>>Daily</option>
                        <option value="weekly" <%= filterType === 'weekly' ? 'selected' : '' %>>Weekly</option>
                        <option value="monthly" <%= filterType === 'monthly' ? 'selected' : '' %>>Monthly</option>
                        <option value="yearly" <%= filterType === 'yearly' ? 'selected' : '' %>>Yearly</option>
                        <option value="custom" <%= filterType === 'custom' ? 'selected' : '' %>>Custom Date Range</option>
                    </select>
                </div>
                <div class="col-md-3 custom-date-field" style="<%= filterType !== 'custom' ? 'display: none;' : '' %>">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input type="date" name="startDate" id="startDate" class="form-control date-range-picker" 
                           value="<%= filterType === 'custom' ? dateRange.startDate.toISOString().split('T')[0] : '' %>">
                </div>
                <div class="col-md-3 custom-date-field" style="<%= filterType !== 'custom' ? 'display: none;' : '' %>">
                    <label for="endDate" class="form-label">End Date</label>
                    <input type="date" name="endDate" id="endDate" class="form-control date-range-picker" 
                           value="<%= filterType === 'custom' ? dateRange.endDate.toISOString().split('T')[0] : '' %>">
                </div>
                <div class="col-md-3">
                    <button type="submit" class="btn btn-chocolate w-100">Apply Filter</button>
                </div>
            </form>
        </div>

       
        <div class="alert alert-light mb-4">
            <strong>Report Period:</strong> 
            <%= dateRange.startDate.toLocaleDateString() %> to <%= dateRange.endDate.toLocaleDateString() %>
        </div>

  
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card">
                    <h5 class="card-title">Total Orders</h5>
                    <p class="card-value"><%= salesMetrics.orderCount %></p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card">
                    <h5 class="card-title">Total Revenue</h5>
                    <p class="card-value">₹<%= salesMetrics.totalSales.toFixed(2) %></p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card">
                    <h5 class="card-title">Total Discount</h5>
                    <p class="card-value">₹<%= salesMetrics.totalDiscount.toFixed(2) %></p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card">
                    <h5 class="card-title">Gross Revenue</h5>
                    <p class="card-value">₹<%= salesMetrics.grossRevenue.toFixed(2) %></p>
                </div>
            </div>
        </div>

       
        <div class="row mb-4">
           
            <div class="col-md-6">
                <div class="card">
                    <h5 class="card-title">Sales Overview</h5>
                    <div class="chart-container">
                        <canvas id="salesOverviewChart"></canvas>
                    </div>
                </div>
            </div>
            
         
            <div class="col-md-6">
                <div class="card">
                    <h5 class="card-title">Payment Methods</h5>
                    <div class="chart-container">
                        <canvas id="paymentMethodsChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mb-4">
          
            <div class="col-md-4">
                <div class="card">
                    <h5 class="card-title">Top Products</h5>
                    <div class="chart-container">
                        <canvas id="topProductsChart"></canvas>
                    </div>
                </div>
            </div>
            
        
            <div class="col-md-4">
                <div class="card">
                    <h5 class="card-title">Top Categories</h5>
                    <div class="chart-container">
                        <canvas id="topCategoriesChart"></canvas>
                    </div>
                </div>
            </div>
            
 
            <div class="col-md-4">
                <div class="card">
                    <h5 class="card-title">Top Coupons</h5>
                    <div class="chart-container">
                        <canvas id="topCouponsChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

      
        <div class="card mb-4">
            <h5 class="card-title">Download Report</h5>
            <div class="d-flex justify-content-center gap-4 py-4">
                <a href="/admin/sales-report/download/pdf?filter=<%= filterType %><%= filterType === 'custom' ? `&startDate=${dateRange.startDate.toISOString().split('T')[0]}&endDate=${dateRange.endDate.toISOString().split('T')[0]}` : '' %>" class="btn btn-lg btn-danger">
                    <i class="fas fa-file-pdf me-2"></i> Download as PDF
                </a>
                <a href="/admin/sales-report/download/excel?filter=<%= filterType %><%= filterType === 'custom' ? `&startDate=${dateRange.startDate.toISOString().split('T')[0]}&endDate=${dateRange.endDate.toISOString().split('T')[0]}` : '' %>" class="btn btn-lg btn-success">
                    <i class="fas fa-file-excel me-2"></i> Download as Excel
                </a>
            </div>
        </div>
    </div>

 
    <%- include('../partials/admin/footer') %>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
      
        function toggleDateFields() {
            const filterType = document.getElementById('filter').value;
            const customDateFields = document.querySelectorAll('.custom-date-field');
            
            if (filterType === 'custom') {
                customDateFields.forEach(field => field.style.display = 'block');
            } else {
                customDateFields.forEach(field => field.style.display = 'none');
            }
        }

     
        document.addEventListener('DOMContentLoaded', function() {
        
            const salesOverviewCtx = document.getElementById('salesOverviewChart').getContext('2d');
            new Chart(salesOverviewCtx, {
                type: 'bar',
                data: {
                    labels: ['Revenue', 'Discount', 'Savings'],
                    datasets: [{
                        label: 'Amount (₹)',
                        data: [
                            <%- salesMetrics.totalSales %>,
                            <%- salesMetrics.totalDiscount %>,
                            <%- salesMetrics.totalSavings %>
                        ],
                        backgroundColor: [
                            'rgba(75, 192, 192, 0.6)',
                            'rgba(255, 99, 132, 0.6)',
                            'rgba(255, 159, 64, 0.6)'
                        ],
                        borderColor: [
                            'rgba(75, 192, 192, 1)',
                            'rgba(255, 99, 132, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            
            const paymentMethodsCtx = document.getElementById('paymentMethodsChart').getContext('2d');
            const paymentMethodNames = <%- JSON.stringify(Object.keys(paymentMethods)) %>;
            const paymentCounts = <%- JSON.stringify(Object.values(paymentMethods).map(p => p.count)) %>;
            
            new Chart(paymentMethodsCtx, {
                type: 'pie',
                data: {
                    labels: paymentMethodNames,
                    datasets: [{
                        data: paymentCounts,
                        backgroundColor: [
                            'rgba(54, 162, 235, 0.6)',
                            'rgba(255, 99, 132, 0.6)',
                            'rgba(255, 206, 86, 0.6)',
                            'rgba(75, 192, 192, 0.6)',
                            'rgba(153, 102, 255, 0.6)'
                        ],
                        borderColor: [
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 99, 132, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right'
                        }
                    }
                }
            });

          
            <% if (topProducts && topProducts.length > 0) { %>
                const topProductsCtx = document.getElementById('topProductsChart').getContext('2d');
                const productNames = <%- JSON.stringify(topProducts.map(p => p.productDetails.productName.substring(0, 15) + (p.productDetails.productName.length > 15 ? '...' : ''))) %>;
                const productRevenue = <%- JSON.stringify(topProducts.map(p => p.totalRevenue)) %>;
                
                new Chart(topProductsCtx, {
                    type: 'bar',
                    data: {
                        labels: productNames,
                        datasets: [{
                            label: 'Revenue (₹)',
                            data: productRevenue,
                            backgroundColor: 'rgba(75, 192, 192, 0.6)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            <% } %>

            
            <% if (topCategories && topCategories.length > 0) { %>
                const topCategoriesCtx = document.getElementById('topCategoriesChart').getContext('2d');
                const categoryNames = <%- JSON.stringify(topCategories.map(c => c.categoryName)) %>;
                const categoryRevenue = <%- JSON.stringify(topCategories.map(c => c.totalRevenue)) %>;
                
                new Chart(topCategoriesCtx, {
                    type: 'doughnut',
                    data: {
                        labels: categoryNames,
                        datasets: [{
                            data: categoryRevenue,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.6)',
                                'rgba(54, 162, 235, 0.6)',
                                'rgba(255, 206, 86, 0.6)',
                                'rgba(75, 192, 192, 0.6)',
                                'rgba(153, 102, 255, 0.6)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false
                    }
                });
            <% } %>

       
            <% if (topCoupons && topCoupons.length > 0) { %>
                const topCouponsCtx = document.getElementById('topCouponsChart').getContext('2d');
                const couponCodes = <%- JSON.stringify(topCoupons.map(c => c.couponDetails.code)) %>;
                const couponDiscount = <%- JSON.stringify(topCoupons.map(c => c.totalDiscount)) %>;
                
                new Chart(topCouponsCtx, {
                    type: 'bar',
                    data: {
                        labels: couponCodes,
                        datasets: [{
                            label: 'Discount (₹)',
                            data: couponDiscount,
                            backgroundColor: 'rgba(255, 159, 64, 0.6)',
                            borderColor: 'rgba(255, 159, 64, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            <% } %>
        });
    </script>
</body>
</html>
