<%- include('../partials/admin/header') %>

<body>
  <div class="content-wrapper">
    <div class="container-fluid">
      <div class="row">
        <%- include('../partials/admin/sidebar', { activePage: 'products' }) %>

        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
          <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
            <h1 class="h2"><%= product ? 'Edit Product' : 'Add Product' %></h1>
          </div>

          <% if (errors && errors.length > 0) { %>
            <div class="alert alert-danger">
              <% errors.forEach(error => { %>
                <p><%= error.msg %></p>
              <% }) %>
            </div>
          <% } %>

          <form id="productForm" action="<%= product ? '/admin/products/edit/' + product._id : '/admin/products/add' %>" method="POST" enctype="multipart/form-data">
            <div class="mb-3">
              <label for="productName" class="form-label">Product Name</label>
              <input type="text" class="form-control" id="productName" name="productName" value="<%= product ? product.productName : '' %>" required>
            </div>
            <div class="mb-3">
              <label for="description" class="form-label">Description</label>
              <textarea class="form-control" id="description" name="description" rows="4" required><%= product ? product.description : '' %></textarea>
            </div>
            <div class="mb-3">
              <label for="category" class="form-label">Category</label>
              <select class="form-select" id="category" name="category" required>
                <option value="">Select Category</option>
                <% categories.forEach(category => { %>
                  <option value="<%= category._id %>" <%= product && product.category._id.toString() === category._id.toString() ? 'selected' : '' %>><%= category.name %></option>
                <% }) %>
              </select>
            </div>

            <h4>Variant Details</h4>
            <div id="variantsContainer">
              <% if (product && product.variants && product.variants.length > 0) { %>
                <% product.variants.forEach((variant, index) => { %>
                  <div class="variant-section mb-4 border p-3 position-relative" data-index="<%= index %>">
                    <button type="button" class="btn btn-danger btn-sm position-absolute top-0 end-0 remove-variant" <%= product.variants.length === 1 ? 'disabled' : '' %>>Remove</button>
                    <div class="mb-3">
                      <label class="form-label">Flavor</label>
                      <select class="form-select" name="variants[<%= index %>][flavor]" required>
                        <option value="">Select Flavor</option>
                        <option value="Almond" <%= variant.flavor === 'Almond' ? 'selected' : '' %>>Almond</option>
                        <option value="Caramel" <%= variant.flavor === 'Caramel' ? 'selected' : '' %>>Caramel</option>
                        <option value="Peanut" <%= variant.flavor === 'Peanut' ? 'selected' : '' %>>Peanut</option>
                      </select>
                    </div>
                    <div class="mb-3">
                      <label class="form-label">Sugar Level</label>
                      <select class="form-select" name="variants[<%= index %>][sugarLevel]" required>
                        <option value="">Select Sugar Level</option>
                        <option value="Low" <%= variant.sugarLevel === 'Low' ? 'selected' : '' %>>Low</option>
                        <option value="Medium" <%= variant.sugarLevel === 'Medium' ? 'selected' : '' %>>Medium</option>
                        <option value="Sugar-Free" <%= variant.sugarLevel === 'Sugar-Free' ? 'selected' : '' %>>Sugar-Free</option>
                      </select>
                    </div>
                    <div class="mb-3">
                      <label class="form-label">Weight (grams)</label>
                      <select class="form-select" name="variants[<%= index %>][weight]" required>
                        <option value="">Select Weight</option>
                        <option value="50" <%= variant.weight === 50 ? 'selected' : '' %>>50</option>
                        <option value="100" <%= variant.weight === 100 ? 'selected' : '' %>>100</option>
                        <option value="200" <%= variant.weight === 200 ? 'selected' : '' %>>200</option>
                      </select>
                    </div>
                    <div class="mb-3">
                      <label class="form-label">Stock Quantity</label>
                      <input type="number" class="form-control" name="variants[<%= index %>][stock_quantity]" value="<%= variant.stock_quantity %>" min="0" required>
                    </div>
                    <div class="mb-3">
                      <label class="form-label">Regular Price</label>
                      <input type="number" class="form-control" name="variants[<%= index %>][regularPrice]" value="<%= variant.regularPrice %>" min="0" step="0.01" required>
                    </div>
                    <div class="mb-3">
                      <label class="form-label">Sale Price</label>
                      <input type="number" class="form-control" name="variants[<%= index %>][salePrice]" value="<%= variant.salePrice %>" min="0" step="0.01" required>
                    </div>
                    <div class="mb-3">
                      <label class="form-label">Product Images (Minimum 3)</label>
                      <input type="file" class="form-control image-upload" name="variants[<%= index %>][images]" accept="image/*" multiple>
                      <div class="preview-container mt-2" data-variant-index="<%= index %>">
                        <% if (variant.productImage && variant.productImage.length > 0) { %>
                          <p>Current Images:</p>
                          <% variant.productImage.forEach((image, imgIndex) => { %>
                            <img src="<%= image %>" alt="Product Image" class="preview-image" data-variant-index="<%= index %>" data-image-index="<%= imgIndex %>" style="width: 100px; height: 100px; object-fit: cover; margin-right: 10px; cursor: pointer;">
                          <% }) %>
                        <% } %>
                      </div>
                    </div>
                  </div>
                <% }) %>
              <% } else { %>
                <div class="variant-section mb-4 border p-3 position-relative" data-index="0">
                  <button type="button" class="btn btn-danger btn-sm position-absolute top-0 end-0 remove-variant" disabled>Remove</button>
                  <div class="mb-3">
                    <label class="form-label">Flavor</label>
                    <select class="form-select" name="variants[0][flavor]" required>
                      <option value="">Select Flavor</option>
                      <option value="Almond">Almond</option>
                      <option value="Caramel">Caramel</option>
                      <option value="Peanut">Peanut</option>
                    </select>
                  </div>
                  <div class="mb-3">
                    <label class="form-label">Sugar Level</label>
                    <select class="form-select" name="variants[0][sugarLevel]" required>
                      <option value="">Select Sugar Level</option>
                      <option value="Low">Low</option>
                      <option value="Medium">Medium</option>
                      <option value="Sugar-Free">Sugar-Free</option>
                    </select>
                  </div>
                  <div class="mb-3">
                    <label class="form-label">Weight (grams)</label>
                    <select class="form-select" name="variants[0][weight]" required>
                      <option value="">Select Weight</option>
                      <option value="50">50</option>
                      <option value="100">100</option>
                      <option value="200">200</option>
                    </select>
                  </div>
                  <div class="mb-3">
                    <label class="form-label">Stock Quantity</label>
                    <input type="number" class="form-control" name="variants[0][stock_quantity]" min="0" required>
                  </div>
                  <div class="mb-3">
                    <label class="form-label">Regular Price</label>
                    <input type="number" class="form-control" name="variants[0][regularPrice]" min="0" step="0.01" required>
                  </div>
                  <div class="mb-3">
                    <label class="form-label">Sale Price</label>
                    <input type="number" class="form-control" name="variants[0][salePrice]" min="0" step="0.01" required>
                  </div>
                  <div class="mb-3">
                    <label class="form-label">Product Images (Minimum 3)</label>
                    <input type="file" class="form-control image-upload" name="variants[0][images]" accept="image/*" multiple required>
                    <div class="preview-container mt-2" data-variant-index="0"></div>
                  </div>
                </div>
              <% } %>
            </div>
            <button type="button" id="addVariant" class="btn btn-success mb-3">Add Variant</button>
            <button type="submit" class="btn btn-primary"><%= product ? 'Update Product' : 'Add Product' %></button>
          </form>
          <a href="/admin/products" class="btn btn-secondary mt-3">Back to Product Listing</a>

         
          <div class="modal fade" id="cropperModal" tabindex="-1" aria-labelledby="cropperModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="cropperModalLabel">Crop Image</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                  <div class="img-container">
                    <img id="imageToCrop" src="" alt="Image to crop">
                  </div>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                  <button type="button" class="btn btn-primary" id="cropImage">Crop & Save</button>
                </div>
              </div>
            </div>
          </div>
        </main>
      </div>
    </div>
  </div>


  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      let variantIndex = <%= product && product.variants ? product.variants.length : 1 %>;
      let cropper = null;
      let currentFileInput = null;
      let currentVariantIndex = null;
      let currentImageIndex = null;
      let croppedBlobs = {};

    
      document.getElementById('variantsContainer').addEventListener('change', (e) => {
        if (e.target.classList.contains('image-upload')) {
          const files = e.target.files;
          const variantIndex = e.target.closest('.variant-section').dataset.index;
          const previewContainer = document.querySelector(`.preview-container[data-variant-index="${variantIndex}"]`);
          previewContainer.innerHTML = '<p>Preview:</p>';

          Array.from(files).forEach((file, index) => {
            const reader = new FileReader();
            reader.onload = (event) => {
              const img = document.createElement('img');
              img.src = event.target.result;
              img.className = 'preview-image';
              img.dataset.variantIndex = variantIndex;
              img.dataset.imageIndex = index;
              img.style.width = '100px';
              img.style.height = '100px';
              img.style.objectFit = 'cover';
              img.style.marginRight = '10px';
              img.style.cursor = 'pointer';
              previewContainer.appendChild(img);
            };
            reader.readAsDataURL(file);
          });
        }
      });

    
      document.getElementById('variantsContainer').addEventListener('click', (e) => {
        if (e.target.classList.contains('preview-image')) {
          currentVariantIndex = e.target.dataset.variantIndex;
          currentImageIndex = e.target.dataset.imageIndex;
          const fileInput = document.querySelector(`.variant-section[data-index="${currentVariantIndex}"] .image-upload`);
          currentFileInput = fileInput;

          if (fileInput.files[currentImageIndex]) {
            const file = fileInput.files[currentImageIndex];
            const reader = new FileReader();
            reader.onload = (event) => {
              const imageToCrop = document.getElementById('imageToCrop');
              imageToCrop.src = event.target.result;
              const modal = new bootstrap.Modal(document.getElementById('cropperModal'));
              modal.show();

              if (cropper) {
                cropper.destroy();
              }

              cropper = new Cropper(imageToCrop, {
                aspectRatio: 1,
                viewMode: 1,
                autoCropArea: 0.8,
                responsive: true
              });
            };
            reader.readAsDataURL(file);
          }
        }
      });

   
      document.getElementById('cropImage').addEventListener('click', () => {
        if (cropper) {
          const canvas = cropper.getCroppedCanvas({
            width: 300,
            height: 300
          });

          canvas.toBlob((blob) => {
            if (!croppedBlobs[currentVariantIndex]) {
              croppedBlobs[currentVariantIndex] = {};
            }
            croppedBlobs[currentVariantIndex][currentImageIndex] = blob;

            const previewImage = document.querySelector(`.preview-image[data-variant-index="${currentVariantIndex}"][data-image-index="${currentImageIndex}"]`);
            previewImage.src = URL.createObjectURL(blob);

            cropper.destroy();
            cropper = null;
            const modal = bootstrap.Modal.getInstance(document.getElementById('cropperModal'));
            modal.hide();
          }, 'image/jpeg');
        }
      });

      document.getElementById('productForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const variantSections = document.querySelectorAll('.variant-section');
        let errors = [];

   
        variantSections.forEach((section, index) => {
          const fileInput = section.querySelector(`input[name="variants[${index}][images]"]`);
          if (fileInput.files.length > 0 && fileInput.files.length < 3) {
            errors.push(`Variant ${index + 1} must have at least 3 images if uploading new images.`);
          }
        });

        if (errors.length > 0) {
          Swal.fire({
            title: 'Validation Error',
            html: errors.join('<br>'),
            icon: 'error',
            confirmButtonText: 'OK'
          });
          return;
        }

        const form = e.target;
        const formData = new FormData(form);

        Object.keys(croppedBlobs).forEach(variantIndex => {
          Object.keys(croppedBlobs[variantIndex]).forEach(imageIndex => {
            const blob = croppedBlobs[variantIndex][imageIndex];
            formData.append(`variants[${variantIndex}][images]`, blob, `cropped_${imageIndex}.jpg`);
          });
        });

        try {
          const response = await fetch(form.action, {
            method: 'POST',
            body: formData
          });
          if (response.ok) {
            window.location.href = '/admin/products';
          } else {
            Swal.fire({
              title: 'Error',
              text: 'Failed to save product',
              icon: 'error',
              confirmButtonText: 'OK'
            });
          }
        } catch (error) {
          Swal.fire({
            title: 'Error',
            text: 'An error occurred while saving the product',
            icon: 'error',
            confirmButtonText: 'OK'
          });
        }
      });

   
      document.getElementById('addVariant').addEventListener('click', () => {
        const container = document.getElementById('variantsContainer');
        const variantSection = document.createElement('div');
        variantSection.className = 'variant-section mb-4 border p-3 position-relative';
        variantSection.dataset.index = variantIndex;
        variantSection.innerHTML = `
          <button type="button" class="btn btn-danger btn-sm position-absolute top-0 end-0 remove-variant">Remove</button>
          <div class="mb-3">
            <label class="form-label">Flavor</label>
            <select class="form-select" name="variants[${variantIndex}][flavor]" required>
              <option value="">Select Flavor</option>
              <option value="Almond">Almond</option>
              <option value="Caramel">Caramel</option>
              <option value="Peanut">Peanut</option>
            </select>
          </div>
          <div class="mb-3">
            <label class="form-label">Sugar Level</label>
            <select class="form-select" name="variants[${variantIndex}][sugarLevel]" required>
              <option value="">Select Sugar Level</option>
              <option value="Low">Low</option>
              <option value="Medium">Medium</option>
              <option value="Sugar-Free">Sugar-Free</option>
            </select>
          </div>
          <div class="mb-3">
            <label class="form-label">Weight (grams)</label>
            <select class="form-select" name="variants[${variantIndex}][weight]" required>
              <option value="">Select Weight</option>
              <option value="50">50</option>
              <option value="100">100</option>
              <option value="200">200</option>
            </select>
          </div>
          <div class="mb-3">
            <label class="form-label">Stock Quantity</label>
            <input type="number" class="form-control" name="variants[${variantIndex}][stock_quantity]" min="0" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Regular Price</label>
            <input type="number" class="form-control" name="variants[${variantIndex}][regularPrice]" min="0" step="0.01" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Sale Price</label>
            <input type="number" class="form-control" name="variants[${variantIndex}][salePrice]" min="0" step="0.01" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Product Images (Minimum 3)</label>
            <input type="file" class="form-control image-upload" name="variants[${variantIndex}][images]" accept="image/*" multiple required>
            <div class="preview-container mt-2" data-variant-index="${variantIndex}"></div>
          </div>
        `;
        container.appendChild(variantSection);
        updateRemoveButtons();
        variantIndex++;
      });

      document.getElementById('variantsContainer').addEventListener('click', (e) => {
        if (e.target.classList.contains('remove-variant')) {
          const variantSection = e.target.closest('.variant-section');
          const index = variantSection.dataset.index;
          if (croppedBlobs[index]) {
            delete croppedBlobs[index];
          }
          variantSection.remove();
          updateRemoveButtons();
          reindexVariants();
        }
      });

      function updateRemoveButtons() {
        const variantSections = document.querySelectorAll('.variant-section');
        const removeButtons = document.querySelectorAll('.remove-variant');
        removeButtons.forEach(button => {
          button.disabled = variantSections.length === 1;
        });
      }

      function reindexVariants() {
        const variantSections = document.querySelectorAll('.variant-section');
        const newCroppedBlobs = {};
        variantSections.forEach((section, index) => {
          section.dataset.index = index;
          const inputs = section.querySelectorAll('input, select');
          inputs.forEach(input => {
            const name = input.name.replace(/variants\[\d+\]/, `variants[${index}]`);
            input.name = name;
          });
          const previewContainer = section.querySelector('.preview-container');
          previewContainer.dataset.variantIndex = index;
          const previewImages = section.querySelectorAll('.preview-image');
          previewImages.forEach(img => {
            img.dataset.variantIndex = index;
          });
          if (croppedBlobs[section.dataset.index]) {
            newCroppedBlobs[index] = croppedBlobs[section.dataset.index];
          }
        });
        croppedBlobs = newCroppedBlobs;
        variantIndex = variantSections.length;
      }
    });
  </script>

  <style>
    .img-container {
      max-height: 400px;
      overflow: auto;
    }
    #imageToCrop {
      max-width: 100%;
    }
  </style>

  <%- include('../partials/admin/footer') %>
</body>
</html>