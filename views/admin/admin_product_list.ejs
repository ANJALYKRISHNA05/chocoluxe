<%- include('../partials/admin/header') %>

<body>
  <!-- Custom CSS for Admin Product List -->
  <style>
    :root {
      --primary-color: #6a3e20;
      --secondary-color: #c49b63;
      --light-color: #f8f5f0;
      --dark-color: #2c1810;
      --success-color: #28a745;
      --danger-color: #dc3545;
      --info-color: #17a2b8;
      --warning-color: #ffc107;
    }
    
    .content-wrapper {
      background-color: #f9f9f9;
      min-height: 100vh;
    }
    
    .page-header {
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.05);
      padding: 20px;
      margin-bottom: 25px;
    }
    
    .page-title {
      font-family: 'Playfair Display', serif;
      color: var(--primary-color);
      margin: 0;
      font-weight: 600;
    }
    
    .add-product-btn {
      background-color: var(--secondary-color);
      border: none;
      border-radius: 5px;
      padding: 8px 16px;
      transition: all 0.3s ease;
      font-weight: 500;
    }
    
    .add-product-btn:hover {
      background-color: var(--primary-color);
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    
    .product-card-table {
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 2px 15px rgba(0,0,0,0.05);
      overflow: hidden;
    }
    
    .product-card-table thead {
      background-color: var(--light-color);
      border-bottom: 2px solid var(--secondary-color);
    }
    
    .product-card-table th {
      font-family: 'Playfair Display', serif;
      color: var(--primary-color);
      font-weight: 600;
      padding: 15px;
      font-size: 14px;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    
    .product-card-table td {
      padding: 15px;
      vertical-align: middle;
      border-bottom: 1px solid rgba(0,0,0,0.05);
    }
    
    .product-card-table tr:hover {
      background-color: rgba(196, 155, 99, 0.05);
    }
    
    .product-image {
      width: 70px;
      height: 70px;
      object-fit: cover;
      border-radius: 8px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      transition: transform 0.3s ease;
    }
    
    .product-image:hover {
      transform: scale(1.05);
    }
    
    .product-name {
      font-weight: 600;
      color: var(--dark-color);
      font-family: 'Playfair Display', serif;
      margin-bottom: 5px;
    }
    
    .category-badge {
      display: inline-block;
      background-color: var(--light-color);
      color: var(--primary-color);
      padding: 4px 10px;
      border-radius: 20px;
      font-size: 12px;
      font-weight: 500;
    }
    
    .variant-container {
      /* Removed max-height and scrolling */
      width: 100%;
    }
    
    .variant-card {
      background-color: #f8f9fa;
      border-radius: 6px;
      padding: 10px 12px;
      margin-bottom: 8px;
      border-left: 3px solid var(--secondary-color);
      font-size: 13px;
      box-shadow: 0 1px 3px rgba(0,0,0,0.05);
    }
    
    .variant-title {
      font-weight: 600;
      color: var(--primary-color);
      margin-bottom: 3px;
    }
    
    .variant-detail {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      margin-top: 6px;
    }
    
    .variant-item {
      background-color: white;
      border-radius: 4px;
      padding: 3px 8px;
      font-size: 12px;
      box-shadow: 0 1px 3px rgba(0,0,0,0.05);
      display: inline-flex;
      align-items: center;
    }
    
    .status-badge {
      padding: 5px 10px;
      border-radius: 20px;
      font-size: 12px;
      font-weight: 500;
      text-align: center;
      width: 80px;
    }
    
    .status-active {
      background-color: rgba(40, 167, 69, 0.15);
      color: #28a745;
    }
    
    .status-blocked {
      background-color: rgba(220, 53, 69, 0.15);
      color: #dc3545;
    }
    
    .action-buttons {
      display: flex;
      gap: 8px;
    }
    
    .action-btn {
      border: none;
      border-radius: 5px;
      padding: 6px 12px;
      font-size: 13px;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      transition: all 0.2s ease;
    }
    
    .edit-btn {
      background-color: var(--warning-color);
      color: #212529;
    }
    
    .block-btn {
      background-color: var(--danger-color);
      color: white;
    }
    
    .unblock-btn {
      background-color: var(--success-color);
      color: white;
    }
    
    .offer-btn {
      background-color: var(--info-color);
      color: white;
    }
    
    .action-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 3px 5px rgba(0,0,0,0.1);
    }
    
    .pagination-container {
      margin-top: 25px;
    }
    
    .pagination .page-link {
      color: var(--primary-color);
      border-color: var(--light-color);
    }
    
    .pagination .page-item.active .page-link {
      background-color: var(--secondary-color);
      border-color: var(--secondary-color);
      color: white;
    }
    
    .products-count {
      color: var(--dark-color);
      font-style: italic;
      font-size: 14px;
    }
    
    /* Modal Styling */
    .modal-content {
      border-radius: 8px;
      box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }
    
    .modal-header {
      background-color: var(--light-color);
      border-bottom: 2px solid var(--secondary-color);
    }
    
    .modal-title {
      color: var(--primary-color);
      font-family: 'Playfair Display', serif;
      font-weight: 600;
    }
    
    .variant-offer-card {
      background-color: #f8f9fa;
      border-radius: 8px;
      padding: 15px;
      margin-bottom: 15px;
      border-left: 3px solid var(--secondary-color);
    }
    
    .variant-offer-label {
      font-weight: 600;
      color: var(--primary-color);
      margin-bottom: 10px;
    }
    
    .offer-input-group {
      display: flex;
      gap: 10px;
    }
    
    .remove-offer-btn {
      background-color: var(--danger-color);
      border: none;
      color: white;
      border-radius: 5px;
      transition: all 0.2s ease;
    }
    
    .remove-offer-btn:hover:not(:disabled) {
      background-color: #bd2130;
      transform: translateY(-2px);
    }
    
    .remove-offer-btn:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
    
    @media (max-width: 992px) {
      .action-buttons {
        flex-direction: column;
        gap: 5px;
      }
      
      .action-btn {
        width: 100%;
      }
    }
  </style>

  <div class="content-wrapper">
    <div class="container-fluid">
      <div class="row g-0">
        <%- include('../partials/admin/sidebar', { activePage: 'products' }) %>

        <main class="col-md-9 col-lg-10 p-0 ps-0 pe-3 py-4">
          <div class="page-header d-flex justify-content-between align-items-center">
            <h1 class="page-title">Products</h1>
            <a href="/admin/products/add" class="btn add-product-btn text-white">
              <i class="fas fa-plus me-2"></i>Add Product
            </a>
          </div>

          <div class="table-responsive product-card-table">
            <table class="table table-borderless mb-0">
              <thead>
                <tr>
                  <th>Image</th>
                  <th>Product Details</th>
                  <th>Variants</th>
                  <th>Status</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                <% products.forEach(function(product) { %>
                  <tr>
                    <td>
                      <% if (product.variants[0].productImage.length > 0) { %>
                        <img src="<%= product.variants[0].productImage[0] %>" alt="<%= product.productName %>" class="product-image">
                      <% } else { %>
                        <div class="product-image d-flex align-items-center justify-content-center bg-light text-muted" style="font-size: 12px;">No Image</div>
                      <% } %>
                    </td>
                    <td>
                      <div class="product-name"><%= product.productName %></div>
                      <div class="category-badge">
                        <i class="fas fa-tag me-1"></i>
                        <%= product.category && product.category.name ? product.category.name : 'No Category' %>
                      </div>
                    </td>
                    <td>
                      <div class="variant-container">
                        <% product.variants.forEach(function(variant, index) { %>
                          <div class="variant-card">
                            <div class="variant-title">Variant <%= index + 1 %>: <%= variant.flavor %></div>
                            <div class="variant-detail">
                              <span class="variant-item"><i class="fas fa-cookie-bite me-1"></i><%= variant.sugarLevel %></span>
                              <span class="variant-item"><i class="fas fa-weight me-1"></i><%= variant.weight %>g</span>
                              <span class="variant-item"><i class="fas fa-box me-1"></i>Stock: <%= variant.stock_quantity %></span>
                              <span class="variant-item"><i class="fas fa-rupee-sign me-1"></i><%= variant.salePrice.toFixed(2) %></span>
                              <span class="variant-item <%= variant.productOffer ? 'text-success' : 'text-muted' %>"><i class="fas fa-percentage me-1"></i><%= variant.productOffer ? variant.productOffer + '%' : 'No Offer' %></span>
                            </div>
                          </div>
                        <% }); %>
                      </div>
                    </td>
                    <td>
                      <div class="status-badge <%= product.isBlocked ? 'status-blocked' : 'status-active' %>">
                        <%= product.isBlocked ? 'Blocked' : 'Active' %>
                      </div>
                    </td>
                    <td>
                      <div class="action-buttons">
                        <a href="/admin/products/edit/<%= product._id %>" class="action-btn edit-btn">
                          <i class="fas fa-edit me-1"></i> Edit
                        </a>
                        <button class="action-btn <%= product.isBlocked ? 'unblock-btn' : 'block-btn' %>" onclick="toggleStatus('<%= product._id %>', <%= product.isBlocked %>)">
                          <i class="fas <%= product.isBlocked ? 'fa-unlock' : 'fa-ban' %> me-1"></i>
                          <%= product.isBlocked ? 'Unblock' : 'Block' %>
                        </button>
                        <button class="action-btn offer-btn" onclick="openOfferModal('<%= product._id %>', '<%= encodeURIComponent(JSON.stringify(product.variants)) %>')" title="Manage Offers">
                          <i class="fas fa-percentage me-1"></i> Offers
                        </button>
                      </div>
                    </td>
                  </tr>
                <% }); %>
              </tbody>
            </table>
          </div>

          <!-- Offer Management Modal -->
          <div class="modal fade" id="offerModal" tabindex="-1" aria-labelledby="offerModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="offerModalLabel">Manage Product Offers</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                  <form id="offerForm">
                    <div id="variantOfferContainer"></div>
                  </form>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                  <button type="button" class="btn btn-primary" style="background-color: var(--secondary-color); border-color: var(--secondary-color);" onclick="submitOfferForm()">Save Changes</button>
                </div>
              </div>
            </div>
          </div>

          <% if (totalPages > 1) { %>
            <div class="pagination-container">
              <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                  <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                    <a class="page-link" href="/admin/products?page=<%= currentPage - 1 %>&limit=<%= limit %>" aria-label="Previous">
                      <span aria-hidden="true">«</span>
                    </a>
                  </li>
                  
                  <% for (let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                      <a class="page-link" href="/admin/products?page=<%= i %>&limit=<%= limit %>"><%= i %></a>
                    </li>
                  <% } %>
                  
                  <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                    <a class="page-link" href="/admin/products?page=<%= currentPage + 1 %>&limit=<%= limit %>" aria-label="Next">
                      <span aria-hidden="true">»</span>
                    </a>
                  </li>
                </ul>
              </nav>
            </div>
          <% } %>
          
          <div class="text-center mt-3">
            <p class="products-count">Showing <%= products.length %> of <%= totalProducts %> products</p>
          </div>

        </main>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://kit.fontawesome.com/your-font-awesome-kit.js"></script> <!-- Replace with your Font Awesome kit URL -->
  <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet">
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const urlParams = new URLSearchParams(window.location.search);
      if (urlParams.get('success') === 'true') {
        Swal.fire({
          title: 'Success!',
          text: 'Product added successfully.',
          icon: 'success',
          timer: 2000,
          showConfirmButton: false
        }).then(() => {
          window.history.replaceState({}, document.title, window.location.pathname);
        });
      }
    });

    async function toggleStatus(productId, isBlocked) {
      const action = isBlocked ? 'unblock' : 'block';
      const result = await Swal.fire({
        title: `Are you sure you want to ${action} this product?`,
        text: "This action cannot be undone!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: `Yes, ${action} it!`
      });

      if (result.isConfirmed) {
        try {
          const response = await fetch(`/admin/products/toggle-status/${productId}`, {
            method: 'PATCH',
            headers: { 'Content-Type': 'application/json' }
          });
          const data = await response.json();
          if (data.success) {
            Swal.fire({
              title: 'Success!',
              text: `Product has been ${action}ed successfully.`,
              icon: 'success',
              timer: 2000,
              showConfirmButton: false
            }).then(() => location.reload());
          } else {
            Swal.fire({
              title: 'Error!',
              text: 'Error toggling product status.',
              icon: 'error',
              confirmButtonText: 'OK'
            });
          }
        } catch (error) {
          console.error('Error:', error);
          Swal.fire({
            title: 'Error!',
            text: 'Error toggling product status.',
            icon: 'error',
            confirmButtonText: 'OK'
          });
        }
      }
    }

    let currentProductId = null;

    function openOfferModal(productId, variantsJson) {
      currentProductId = productId;
      const variants = JSON.parse(decodeURIComponent(variantsJson));
      const container = document.getElementById('variantOfferContainer');
      container.innerHTML = '';

      variants.forEach((variant, index) => {
        const variantDiv = document.createElement('div');
        variantDiv.className = 'variant-offer-card';
        variantDiv.innerHTML = `
          <div class="variant-offer-label">Variant ${index + 1}: ${variant.flavor}, ${variant.sugarLevel}, ${variant.weight}g</div>
          <div class="d-flex align-items-center mb-2">
            <span class="badge bg-secondary me-2">Current Price: ₹${variant.salePrice.toFixed(2)}</span>
            <span class="badge ${variant.productOffer ? 'bg-success' : 'bg-light text-dark'} me-2">
              ${variant.productOffer ? variant.productOffer + '% Off' : 'No Offer'}
            </span>
          </div>
          <div class="offer-input-group">
            <div class="input-group">
              <span class="input-group-text"><i class="fas fa-percentage"></i></span>
              <input type="number" class="form-control" name="variants[${index}][productOffer]" value="${variant.productOffer || 0}" min="0" max="100" step="1" placeholder="Enter offer percentage">
              <input type="hidden" name="variants[${index}][index]" value="${index}">
            </div>
            <button type="button" class="remove-offer-btn" onclick="removeOffer('${productId}', ${index})" ${variant.productOffer ? '' : 'disabled'}>
              <i class="fas fa-trash-alt me-1"></i> Remove
            </button>
          </div>
        `;
        container.appendChild(variantDiv);
      });

      const modal = new bootstrap.Modal(document.getElementById('offerModal'));
      modal.show();
    }

    async function submitOfferForm() {
      const form = document.getElementById('offerForm');
      const formData = new FormData(form);
      const variants = [];

      formData.forEach((value, key) => {
        if (key.startsWith('variants[')) {
          const match = key.match(/variants\[(\d+)\]\[(\w+)\]/);
          if (match) {
            const index = parseInt(match[1]);
            const field = match[2];
            if (!variants[index]) variants[index] = {};
            variants[index][field] = value;
          }
        }
      });

      try {
        const response = await fetch(`/admin/products/update-offer/${currentProductId}`, {
          method: 'PATCH',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ variants })
        });

        const data = await response.json();
        if (data.success) {
          Swal.fire({
            title: 'Success!',
            text: 'Product offers updated successfully.',
            icon: 'success',
            timer: 2000,
            showConfirmButton: false
          }).then(() => {
            const modal = bootstrap.Modal.getInstance(document.getElementById('offerModal'));
            modal.hide();
            location.reload();
          });
        } else {
          Swal.fire({
            title: 'Error!',
            text: data.message || 'Error updating product offers.',
            icon: 'error',
            confirmButtonText: 'OK'
          });
        }
      } catch (error) {
        console.error('Error:', error);
        Swal.fire({
          title: 'Error!',
          text: 'Error updating product offers.',
          icon: 'error',
          confirmButtonText: 'OK'
        });
      }
    }

    async function removeOffer(productId, variantIndex) {
      const result = await Swal.fire({
        title: 'Are you sure?',
        text: 'Do you want to remove the offer for this variant?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, remove it!'
      });

      if (result.isConfirmed) {
        try {
          const response = await fetch(`/admin/products/update-offer/${productId}`, {
            method: 'PATCH',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ variants: [{ index: variantIndex, productOffer: 0 }] })
          });

          const data = await response.json();
          if (data.success) {
            Swal.fire({
              title: 'Success!',
              text: 'Offer removed successfully.',
              icon: 'success',
              timer: 2000,
              showConfirmButton: false
            }).then(() => {
              const modal = bootstrap.Modal.getInstance(document.getElementById('offerModal'));
              modal.hide();
              location.reload();
            });
          } else {
            Swal.fire({
              title: 'Error!',
              text: data.message || 'Error removing offer.',
              icon: 'error',
              confirmButtonText: 'OK'
            });
          }
        } catch (error) {
          console.error('Error:', error);
          Swal.fire({
            title: 'Error!',
            text: 'Error removing offer.',
            icon: 'error',
            confirmButtonText: 'OK'
          });
        }
      }
    }
  </script>

  <%- include('../partials/admin/footer') %>
</body>
</html>