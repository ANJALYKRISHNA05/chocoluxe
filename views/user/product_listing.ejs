<%- include('../partials/user/header') %>

<section class="product-listing-section">
  <div class="container-fluid product-banner">
    <div class="container">
      <div class="page-header text-center">
        <h1 class="page-title">Our Chocolate Collection</h1>
        <p class="page-subtitle">Discover our finest selection of handcrafted premium chocolates</p>
      </div>
    </div>
  </div>
  
  <div class="container my-5">
    <div class="products-header d-flex justify-content-between align-items-center mb-4">
      <div class="products-counter">
        <p class="products-found"><span><%= totalProducts %></span> products found</p>
      </div>
      <div class="d-flex align-items-center responsive-controls">
        <!-- Mobile Filter Toggle Button -->
        <button class="btn btn-outline-primary filter-toggle-btn d-lg-none me-2" type="button" id="mobileFilterToggle">
          <i class="fas fa-filter me-2"></i> Filters
        </button>
        <!-- Sort dropdown for mobile -->
        <div class="mobile-sort d-lg-none">
          <select class="form-select custom-select" name="sort" id="mobileSort" onchange="applyMobileSort(this.value)">
            <option value="">Sort By</option>
            <option value="price_low_high" <%= filters.sort === 'price_low_high' ? 'selected' : '' %>>Price: Low to High</option>
            <option value="price_high_low" <%= filters.sort === 'price_high_low' ? 'selected' : '' %>>Price: High to Low</option>
            <option value="name_asc" <%= filters.sort === 'name_asc' ? 'selected' : '' %>>Name: A to Z</option>
            <option value="name_desc" <%= filters.sort === 'name_desc' ? 'selected' : '' %>>Name: Z to A</option>
          </select>
        </div>
      </div>
    </div>

    <div class="row">
      <!-- Filter Sidebar -->
      <div class="col-lg-3 mb-4">
        <div class="filter-sidebar" id="filterSidebar">
          <!-- Mobile Filter Header -->
          <div class="mobile-filter-header d-lg-none">
            <h5>Filter Products</h5>
            <button class="btn-close-filter" id="closeFilterBtn">
              <i class="fas fa-times"></i>
            </button>
          </div>
          
          <!-- Desktop Filter Header -->
          <div class="filter-header d-none d-lg-block">
            <h5>Refine Your Selection</h5>
          </div>
          
          <div class="filter-content">
            <form id="filterForm" action="/products" method="GET">
              <input type="hidden" name="page" value="1">
              
              <!-- Search Products -->
              <div class="filter-group">
                <label for="search" class="filter-label">Search Products</label>
                <div class="input-group">
                  <input type="text" class="form-control" name="search" id="search" value="<%= filters.search || '' %>" placeholder="Search products...">
                  <% if (filters.search) { %>
                    <button type="button" class="btn btn-clear" onclick="clearSearch()">
                      <i class="fas fa-times"></i>
                    </button>
                  <% } %>
                </div>
              </div>

              <!-- Sort By (Desktop only) -->
              <div class="filter-group d-none d-lg-block">
                <label for="sort" class="filter-label">Sort By</label>
                <select class="form-select custom-select" name="sort" id="sort" onchange="this.form.submit()">
                  <option value="">Default</option>
                  <option value="price_low_high" <%= filters.sort === 'price_low_high' ? 'selected' : '' %>>Price: Low to High</option>
                  <option value="price_high_low" <%= filters.sort === 'price_high_low' ? 'selected' : '' %>>Price: High to Low</option>
                  <option value="name_asc" <%= filters.sort === 'name_asc' ? 'selected' : '' %>>Name: A to Z</option>
                  <option value="name_desc" <%= filters.sort === 'name_desc' ? 'selected' : '' %>>Name: Z to A</option>
                </select>
              </div>

              <div class="filter-divider"></div>

              <!-- Category Filter -->
              <div class="filter-group">
                <h6 class="filter-label">Category</h6>
                <div class="filter-scrollable">
                  <% categories.forEach(category => { %>
                    <div class="filter-option">
                      <input class="filter-checkbox" type="radio" name="category" 
                        id="category<%= category._id %>" value="<%= category._id %>" 
                        <%= filters.category === category._id.toString() ? 'checked' : '' %>>
                      <label class="filter-option-label" for="category<%= category._id %>">
                        <%= category.name %>
                      </label>
                    </div>
                  <% }); %>
                </div>
              </div>

              <div class="filter-divider"></div>

              <!-- Flavor Filter -->
              <div class="filter-group">
                <h6 class="filter-label">Flavor</h6>
                <div class="filter-scrollable">
                  <% flavors.forEach(flavor => { %>
                    <div class="filter-option">
                      <input class="filter-checkbox" type="radio" name="flavor" 
                        id="flavor<%= flavor %>" value="<%= flavor %>" 
                        <%= filters.flavor === flavor ? 'checked' : '' %>>
                      <label class="filter-option-label" for="flavor<%= flavor %>">
                        <%= flavor %>
                      </label>
                    </div>
                  <% }); %>
                </div>
              </div>

              <div class="filter-divider"></div>

              <!-- Sugar Level Filter -->
              <div class="filter-group">
                <h6 class="filter-label">Sugar Level</h6>
                <div class="filter-scrollable">
                  <% sugarLevels.forEach(level => { %>
                    <div class="filter-option">
                      <input class="filter-checkbox" type="radio" name="sugarLevel" 
                        id="sugar<%= level %>" value="<%= level %>" 
                        <%= filters.sugarLevel === level ? 'checked' : '' %>>
                      <label class="filter-option-label" for="sugar<%= level %>">
                        <%= level %>
                      </label>
                    </div>
                  <% }); %>
                </div>
              </div>

              <div class="filter-divider"></div>

              <!-- Weight Filter -->
              <div class="filter-group">
                <h6 class="filter-label">Weight (grams)</h6>
                <div class="filter-scrollable">
                  <% weights.forEach(weight => { %>
                    <div class="filter-option">
                      <input class="filter-checkbox" type="radio" name="weight" 
                        id="weight<%= weight %>" value="<%= weight %>" 
                        <%= filters.weight === weight.toString() ? 'checked' : '' %>>
                      <label class="filter-option-label" for="weight<%= weight %>">
                        <%= weight %>g
                      </label>
                    </div>
                  <% }); %>
                </div>
              </div>

              <div class="filter-divider"></div>

              <!-- Price Range Filter -->
              <div class="filter-group">
                <h6 class="filter-label">Price Range</h6>
                <div class="price-range-inputs">
                  <div class="price-input">
                    <span class="currency">₹</span>
                    <input type="number" class="form-control" name="minPrice" placeholder="Min" 
                      value="<%= filters.minPrice || '' %>" min="0">
                  </div>
                  <div class="price-separator"></div>
                  <div class="price-input">
                    <span class="currency">₹</span>
                    <input type="number" class="form-control" name="maxPrice" placeholder="Max" 
                      value="<%= filters.maxPrice || '' %>" min="0">
                  </div>
                </div>
              </div>

              <div class="filter-divider"></div>

              <!-- Filter Actions -->
              <div class="filter-actions">
                <button type="submit" class="btn btn-primary btn-filter">
                  <i class="fas fa-filter me-2"></i>Apply Filters
                </button>
                <a href="/products" class="btn btn-outline-secondary btn-clear-filter">
                  <i class="fas fa-undo me-2"></i>Clear All
                </a>
              </div>
            </form>
          </div>
        </div>
      </div>

      <!-- Products Content -->
      <div class="col-lg-9">
        <div class="products-content">
          <% if (products.length === 0) { %>
            <div class="no-products-message">
              <div class="no-products-icon">
                <i class="fas fa-search"></i>
              </div>
              <h3>No Products Found</h3>
              <p>We couldn't find any products matching your criteria. Try adjusting your filters.</p>
            </div>
          <% } else { %>
            <div class="product-grid">
              <% products.forEach(product => { %>
                <div class="product-item">
                  <div class="product-card">
                    <div class="product-image">
                      <a href="/product/<%= product._id %>">
                        <img src="<%= product.displayVariant.productImage[0] %>" alt="<%= product.productName %>">
                      </a>
                      <div class="product-actions">
                        <button class="action-btn wishlist-btn <%= product.isInWishlist ? 'active' : '' %>" 
                                title="<%= product.isInWishlist ? 'Remove from Wishlist' : 'Add to Wishlist' %>" 
                                data-product-id="<%= product._id %>" 
                                data-variant-id="<%= product.displayVariant._id %>">
                          <i class="fas fa-heart"></i>
                        </button>
                      </div>
                    </div>
                    <div class="product-info">
                      <a href="/product/<%= product._id %>" class="product-link">
                        <h3 class="product-name"><%= product.productName %></h3>
                        <div class="product-category">
                          <span><%= product.category.name %></span>
                        </div>
                        <div class="product-specs">
                          <span class="product-spec"><%= product.displayVariant.flavor %></span>
                          <span class="product-spec"><%= product.displayVariant.sugarLevel %></span>
                          <span class="product-spec"><%= product.displayVariant.weight %>g</span>
                        </div>
                        <div class="product-footer">
                          <div class="product-pricing">
                            <% if (product.displayVariant.effectiveOffer > 0) { %>
                              <span class="sale-price">₹<%= product.displayVariant.offerPrice.toFixed(2) %></span>
                              <span class="regular-price"><del>₹<%= product.displayVariant.originalPrice.toFixed(2) %></del></span>
                              <span class="offer-badge"><%= product.displayVariant.effectiveOffer %>% OFF</span>
                            <% } else if (product.displayVariant.salePrice < product.displayVariant.regularPrice) { %>
                              <span class="sale-price">₹<%= product.displayVariant.salePrice.toFixed(2) %></span>
                              <span class="regular-price"><del>₹<%= product.displayVariant.regularPrice.toFixed(2) %></del></span>
                            <% } else { %>
                              <span class="regular-price">₹<%= product.displayVariant.regularPrice.toFixed(2) %></span>
                            <% } %>
                          </div>
                          <div class="product-availability">
                            <% if (product.displayVariant.stock_quantity > 0) { %>
                              <span class="in-stock">In Stock</span>
                            <% } else { %>
                              <span class="out-of-stock">Out of Stock</span>
                            <% } %>
                          </div>
                        </div>
                      </a>
                      <a href="/product/<%= product._id %>" class="btn-view-product">View Details</a>
                    </div>
                  </div>
                </div>
              <% }); %>
            </div>

            <!-- Pagination -->
            <% if (totalPages > 1) { %>
              <div class="pagination-container">
                <nav aria-label="Product pagination">
                  <ul class="pagination">
                    <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                      <a class="page-link" href="<%= currentPage > 1 ? buildPaginationUrl(currentPage - 1) : '#' %>" aria-label="Previous">
                        <i class="fas fa-chevron-left"></i>
                      </a>
                    </li>
                    
                    <% for (let i = 1; i <= totalPages; i++) { %>
                      <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                        <a class="page-link" href="<%= buildPaginationUrl(i) %>"><%= i %></a>
                      </li>
                    <% } %>
                    
                    <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                      <a class="page-link" href="<%= currentPage < totalPages ? buildPaginationUrl(currentPage + 1) : '#' %>" aria-label="Next">
                        <i class="fas fa-chevron-right"></i>
                      </a>
                    </li>
                  </ul>
                </nav>
              </div>
            <% } %>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Filter Overlay for Mobile -->
<div class="filter-overlay" id="filterOverlay"></div>

<style>
  .product-listing-section {
    background-color: #f9f5f1;
  }
  
  .product-banner {
    background: linear-gradient(135deg, rgba(212, 162, 106, 0.15) 0%, rgba(255, 255, 255, 0.5) 100%), url('/images/chocolate-banner.jpg');
    background-size: cover;
    background-position: center;
    padding: 60px 0;
    margin-bottom: 30px;
    position: relative;
  }
  
  .product-banner::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.3);
  }
  
  .page-header {
    position: relative;
    z-index: 1;
  }
  
  .page-title {
    font-family: 'Playfair Display', serif;
    font-size: 2.5rem;
    font-weight: 700;
    color: #3a1c1a;
    margin-bottom: 15px;
  }
  
  .page-subtitle {
    font-size: 1.1rem;
    color: #6a4c4a;
    max-width: 600px;
    margin: 0 auto;
  }

  /* Responsive Controls */
  .responsive-controls {
    gap: 10px;
  }

  .filter-toggle-btn {
    background-color: #d4a26a;
    border-color: #d4a26a;
    color: white;
    border-radius: 25px;
    padding: 8px 16px;
    font-size: 0.9rem;
    transition: all 0.3s ease;
  }

  .filter-toggle-btn:hover {
    background-color: #c49260;
    border-color: #c49260;
    color: white;
  }

  .mobile-sort .form-select {
    min-width: 120px;
    font-size: 0.9rem;
    border-radius: 25px;
    border-color: #d4a26a;
  }

  /* Filter Sidebar Styles */
  .filter-sidebar {
    background-color: #ffffff;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
    overflow: hidden;
    transition: all 0.3s ease;
    position: relative;
  }

  /* Mobile Filter Header */
  .mobile-filter-header {
    background-color: #3a1c1a;
    color: #fff;
    padding: 15px 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .mobile-filter-header h5 {
    margin: 0;
    font-size: 1.1rem;
    font-weight: 600;
  }

  .btn-close-filter {
    background: none;
    border: none;
    color: white;
    font-size: 1.2rem;
    cursor: pointer;
    padding: 5px;
    border-radius: 50%;
    transition: background-color 0.3s ease;
  }

  .btn-close-filter:hover {
    background-color: rgba(255, 255, 255, 0.1);
  }

  /* Desktop Filter Header */
  .filter-header {
    background-color: #3a1c1a;
    color: #fff;
    padding: 18px 20px;
    border-radius: 8px 8px 0 0;
  }
  
  .filter-header h5 {
    margin: 0;
    font-size: 1.1rem;
    font-weight: 600;
  }
  
  .filter-content {
    padding: 20px;
  }
  
  .filter-group {
    margin-bottom: 20px;
  }
  
  .filter-label {
    display: block;
    font-weight: 600;
    color: #3a1c1a;
    margin-bottom: 10px;
    font-size: 0.95rem;
  }
  
  .filter-divider {
    height: 1px;
    background-color: rgba(212, 162, 106, 0.15);
    margin: 20px 0;
  }
  
  .filter-scrollable {
    max-height: 150px;
    overflow-y: auto;
    padding-right: 5px;
  }
  
  .filter-option {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
  }
  
  .filter-checkbox {
    margin-right: 10px;
    width: 18px;
    height: 18px;
    accent-color: #d4a26a;
  }
  
  .filter-option-label {
    font-size: 0.9rem;
    margin: 0;
    cursor: pointer;
    color: #4a2c2a;
  }
  
  .price-range-inputs {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  .price-input {
    position: relative;
    flex-grow: 1;
  }
  
  .price-separator {
    width: 15px;
    height: 2px;
    background-color: #d4a26a;
  }
  
  .currency {
    position: absolute;
    left: 10px;
    top: 50%;
    transform: translateY(-50%);
    color: #6a4c4a;
    z-index: 10;
  }
  
  .price-input .form-control {
    padding-left: 25px;
  }
  
  .btn-clear {
    background-color: transparent;
    border: none;
    color: #6a4c4a;
    padding: 0.375rem 0.75rem;
  }
  
  .filter-actions {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-top: 25px;
  }
  
  .btn-filter, .btn-clear-filter {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 10px 20px;
    border-radius: 30px;
    transition: all 0.3s ease;
  }
  
  .btn-filter {
    background-color: #d4a26a;
    border-color: #d4a26a;
    color: #fff;
  }
  
  .btn-filter:hover {
    background-color: #c49260;
  }
  
  .btn-clear-filter {
    border-color: #d4a26a;
    color: #d4a26a;
  }
  
  .btn-clear-filter:hover {
    background-color: rgba(212, 162, 106, 0.1);
  }

  /* Filter Overlay */
  .filter-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1040;
    display: none;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .filter-overlay.show {
    display: block;
    opacity: 1;
  }
  
  .products-content {
    padding: 0 10px;
  }
  
  .products-header {
    margin-bottom: 30px;
  }
  
  .products-found {
    font-size: 1.1rem;
    color: #3a1c1a;
    margin: 0;
  }
  
  .products-found span {
    font-weight: 700;
    color: #d4a26a;
  }
  
  .product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
    gap: 25px;
  }
  
  .product-card {
    background-color: #fff;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.03);
    transition: all 0.3s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
    position: relative;
    border: 1px solid rgba(212, 162, 106, 0.08);
  }
  
  .product-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 15px 30px rgba(212, 162, 106, 0.2);
  }
  
  .product-card::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: linear-gradient(to right, #d4a26a, #3a1c1a);
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .product-card:hover::after {
    opacity: 1;
  }
  
  .product-image {
    position: relative;
    height: 200px;
    overflow: hidden;
  }
  
  .product-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }
  
  .product-card:hover .product-image img {
    transform: scale(1.05);
  }
  
  .product-actions {
    position: absolute;
    top: 10px;
    right: 10px;
    z-index: 2;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .product-card:hover .product-actions {
    opacity: 1;
  }
  
  .action-btn {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    background-color: white;
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }
  
  .action-btn:hover {
    background-color: #d4a26a;
    color: white;
  }
  
  .wishlist-btn.active {
    background-color: #d4a26a;
    color: white;
  }
  
  .wishlist-btn.active:hover {
    background-color: #c49260;
  }
  
  .product-info {
    padding: 15px;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }
  
  .product-link {
    text-decoration: none;
    color: inherit;
    display: block;
    flex-grow: 1;
  }
  
  .product-name {
    font-size: 0.95rem;
    font-weight: 600;
    margin-bottom: 6px;
    color: #3a1c1a;
    font-family: 'Playfair Display', serif;
    transition: color 0.3s ease;
    letter-spacing: 0.02em;
    line-height: 1.3;
  }
  
  .product-card:hover .product-name {
    color: #d4a26a;
  }
  
  .product-category {
    font-size: 0.85rem;
    color: #6a4c4a;
    margin-bottom: 10px;
  }
  
  .product-specs {
    display: flex;
    flex-wrap: wrap;
    gap: 4px;
    margin-bottom: 10px;
  }
  
  .product-spec {
    font-size: 0.75rem;
    background-color: rgba(212, 162, 106, 0.08);
    color: #6a4c4a;
    padding: 3px 8px;
    border-radius: 12px;
    letter-spacing: 0.01em;
  }
  
  .product-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: auto;
    padding-top: 15px;
    border-top: 1px solid rgba(212, 162, 106, 0.1);
  }
  
  .product-pricing {
    display: flex;
    flex-direction: column;
    gap: 3px;
  }
  
  .sale-price {
    font-size: 1.1rem;
    font-weight: 700;
    color: #d4a26a;
  }
  
  .regular-price {
    font-weight: 600;
    color: #3a1c1a;
  }
  
  .regular-price del {
    font-size: 0.9rem;
    color: #999;
    font-weight: normal;
  }
  
  .offer-badge {
    font-size: 0.75rem;
    color: #d4a26a;
    background-color: rgba(212, 162, 106, 0.15);
    padding: 2px 8px;
    border-radius: 12px;
    font-weight: 600;
    margin-top: 2px;
  }
  
  .product-availability {
    font-size: 0.85rem;
  }
  
  .in-stock {
    color: #2ecc71;
  }
  
  .out-of-stock {
    color: #e74c3c;
  }
  
  .btn-view-product {
    display: block;
    text-align: center;
    background-color: transparent;
    color: #3a1c1a;
    text-decoration: none;
    padding: 7px 0;
    border: 1px solid rgba(212, 162, 106, 0.3);
    border-radius: 20px;
    margin-top: 12px;
    font-weight: 500;
    font-size: 0.8rem;
    transition: all 0.3s ease;
    letter-spacing: 0.03em;
  }
  
  .btn-view-product:hover {
    background-color: #3a1c1a;
    color: #fff;
    border-color: #3a1c1a;
  }
  
  .no-products-message {
    text-align: center;
    padding: 60px 0;
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
  }
  
  .no-products-icon {
    font-size: 3rem;
    color: #d4a26a;
    margin-bottom: 20px;
  }
  
  .no-products-message h3 {
    font-weight: 600;
    color: #3a1c1a;
    margin-bottom: 10px;
  }
  
  .no-products-message p {
    color: #6a4c4a;
    max-width: 400px;
    margin: 0 auto;
  }
  
  .pagination-container {
    margin-top: 50px;
    display: flex;
    justify-content: center;
  }
  
  .pagination {
    display: flex;
    gap: 5px;
  }
  
  .page-item {
    list-style: none;
  }
  
  .page-link {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: #fff;
    color: #3a1c1a;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
    border: 1px solid rgba(212, 162, 106, 0.2);
  }
  
  .page-item.active .page-link {
    background-color: #d4a26a;
    color: #fff;
    border-color: #d4a26a;
  }
  
  .page-link:hover:not(.disabled) {
    background-color: rgba(212, 162, 106, 0.1);
  }
  
  .page-item.disabled .page-link {
    background-color: #f9f5f1;
    color: #ccc;
    cursor: not-allowed;
  }

  /* Responsive Design */
  @media (max-width: 1199.98px) {
    .product-grid {
      grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
      gap: 20px;
    }
  }

  @media (max-width: 991.98px) {
    .filter-sidebar {
      position: fixed;
      top: 0;
      left: 0;
      width: 85%;
      max-width: 400px;
      height: 100vh;
      z-index: 1050;
      overflow-y: auto;
      transform: translateX(-100%);
      transition: transform 0.3s ease;
      border-radius: 0;
    }

    .filter-sidebar.show {
      transform: translateX(0);
    }

    .product-grid {
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      gap: 20px;
    }
  }
  
  @media (max-width: 767.98px) {
    .product-banner {
      padding: 40px 0;
    }
    
    .page-title {
      font-size: 2rem;
    }

    .products-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 15px;
    }

    .responsive-controls {
      width: 100%;
      justify-content: space-between;
    }

    .filter-toggle-btn {
      flex: 1;
      max-width: 120px;
    }

    .mobile-sort {
      flex: 1;
    }

    .mobile-sort .form-select {
      width: 100%;
      min-width: auto;
    }
    
    .product-grid {
      grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
      gap: 15px;
    }
    
    .product-image {
      height: 140px;
    }
    
    .product-info {
      padding: 12px;
    }
    
    .product-name {
      font-size: 0.9rem;
    }

    .filter-sidebar {
      width: 90%;
      max-width: none;
    }

    .pagination {
      flex-wrap: wrap;
      justify-content: center;
    }

    .page-link {
      width: 35px;
      height: 35px;
      font-size: 0.9rem;
    }
  }
  
  @media (max-width: 575.98px) {
    .page-title {
      font-size: 1.8rem;
    }

    .products-header {
      margin-bottom: 20px;
    }

    .products-found {
      font-size: 1rem;
    }
    
    .product-grid {
      grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
      gap: 12px;
    }
    
    .product-image {
      height: 120px;
    }
    
    .product-info {
      padding: 10px;
    }
    
    .product-name {
      font-size: 0.85rem;
      margin-bottom: 4px;
    }

    .product-category {
      font-size: 0.8rem;
      margin-bottom: 8px;
    }

    .product-specs {
      gap: 3px;
      margin-bottom: 8px;
    }

    .product-spec {
      font-size: 0.7rem;
      padding: 2px 6px;
    }
    
    .sale-price {
      font-size: 1rem;
    }
    
    .regular-price {
      font-size: 0.85rem;
    }
    
    .regular-price del {
      font-size: 0.8rem;
    }
    
    .offer-badge {
      font-size: 0.7rem;
      padding: 1px 6px;
    }

    .btn-view-product {
      font-size: 0.75rem;
      padding: 6px 0;
      margin-top: 8px;
    }

    .filter-sidebar {
      width: 95%;
    }

    .filter-content {
      padding: 15px;
    }

    .filter-actions {
      flex-direction: row;
      gap: 8px;
    }

    .btn-filter, .btn-clear-filter {
      flex: 1;
      padding: 8px 12px;
      font-size: 0.85rem;
    }
  }

  @media (max-width: 374.98px) {
    .product-grid {
      grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
      gap: 10px;
    }

    .product-image {
      height: 100px;
    }

    .product-name {
      font-size: 0.8rem;
    }

    .sale-price {
      font-size: 0.9rem;
    }
  }
</style>

<script>
  // Mobile Filter Toggle Functionality
  const mobileFilterToggle = document.getElementById('mobileFilterToggle');
  const filterSidebar = document.getElementById('filterSidebar');
  const filterOverlay = document.getElementById('filterOverlay');
  const closeFilterBtn = document.getElementById('closeFilterBtn');

  function openMobileFilter() {
    filterSidebar.classList.add('show');
    filterOverlay.classList.add('show');
    document.body.style.overflow = 'hidden';
  }

  function closeMobileFilter() {
    filterSidebar.classList.remove('show');
    filterOverlay.classList.remove('show');
    document.body.style.overflow = '';
  }

  if (mobileFilterToggle) {
    mobileFilterToggle.addEventListener('click', openMobileFilter);
  }

  if (closeFilterBtn) {
    closeFilterBtn.addEventListener('click', closeMobileFilter);
  }

  if (filterOverlay) {
    filterOverlay.addEventListener('click', closeMobileFilter);
  }

  // Close filter on escape key
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape' && filterSidebar.classList.contains('show')) {
      closeMobileFilter();
    }
  });

  // Mobile Sort Functionality
  function applyMobileSort(sortValue) {
    const form = document.getElementById('filterForm');
    const sortInput = form.querySelector('select[name="sort"]') || document.createElement('select');
    sortInput.name = 'sort';
    sortInput.value = sortValue;
    if (!form.contains(sortInput)) {
      form.appendChild(sortInput);
    }
    form.submit();
  }

  // Filter Form Functionality
  document.querySelectorAll('.filter-checkbox').forEach(checkbox => {
    checkbox.addEventListener('change', function() {
      // Close mobile filter after selection
      if (window.innerWidth < 992) {
        setTimeout(() => {
          closeMobileFilter();
        }, 300);
      }
      document.getElementById('filterForm').submit();
    });
  });

  function clearSearch() {
    const searchInput = document.getElementById('search');
    searchInput.value = '';
    document.getElementById('filterForm').submit();
  }

  function updateWishlistBadge(count) {
    const badge = document.querySelector('.wishlist-badge');
    if (badge) {
      if (count > 0) {
        badge.textContent = count;
        badge.style.display = 'inline-block';
      } else {
        badge.style.display = 'none';
      }
    }
  }

  // Wishlist Functionality
  document.querySelectorAll('.wishlist-btn').forEach(button => {
    button.addEventListener('click', async function() {
      const productId = this.getAttribute('data-product-id');
      const variantId = this.getAttribute('data-variant-id');
      const isActive = this.classList.contains('active');

      try {
        const response = await fetch('/add-to-wishlist', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            productId,
            variantId,
          }),
        });

        const data = await response.json();

        if (data.success) {
          if (isActive) {
            this.classList.remove('active');
            this.setAttribute('title', 'Add to Wishlist');
            updateWishlistBadge(data.itemCount);
            if (typeof Swal !== 'undefined') {
              Swal.fire({
                icon: 'success',
                title: 'Removed from Wishlist',
                text: 'Product has been removed from your wishlist.',
                showConfirmButton: false,
                timer: 1500,
              });
            }
          } else {
            this.classList.add('active');
            this.setAttribute('title', 'Remove from Wishlist');
            updateWishlistBadge(data.itemCount);
            if (typeof Swal !== 'undefined') {
              Swal.fire({
                icon: 'success',
                title: 'Added to Wishlist',
                text: data.message,
                showConfirmButton: false,
                timer: 1500,
              });
            }
          }
        } else {
          if (data.message === 'Please log in to add items to wishlist') {
            if (typeof Swal !== 'undefined') {
              Swal.fire({
                icon: 'warning',
                title: 'Login Required',
                text: 'Please log in to add items to your wishlist.',
                confirmButtonText: 'Login',
              }).then((result) => {
                if (result.isConfirmed) {
                  window.location.href = '/user/login';
                }
              });
            } else {
              alert('Please log in to add items to your wishlist.');
            }
          } else {
            if (typeof Swal !== 'undefined') {
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: data.message,
                showConfirmButton: false,
                timer: 1500,
              });
            } else {
              alert(data.message);
            }
          }
        }
      } catch (error) {
        console.error('Error handling wishlist action:', error);
        if (typeof Swal !== 'undefined') {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Something went wrong. Please try again later.',
            showConfirmButton: false,
            timer: 1500,
          });
        } else {
          alert('Something went wrong. Please try again later.');
        }
      }
    });
  });

  // Handle window resize
  window.addEventListener('resize', function() {
    if (window.innerWidth >= 992 && filterSidebar.classList.contains('show')) {
      closeMobileFilter();
    }
  });
</script>

<%- include('../partials/user/footer') %>