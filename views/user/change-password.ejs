<%- include('../partials/user/header') %>

<div class="container py-5">
    <div class="row">
        <!-- Sidebar -->
        <div class="col-lg-3 mb-4">
            <%- include('../partials/user/sidebar', { activeTab: 'password' }) %>
        </div>
        
        <!-- Main Content -->
        <div class="col-lg-9">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white py-3">
                    <h5 class="mb-0 fw-bold text-dark">Change Password</h5>
                </div>
                <div class="card-body p-4">
                    <% if (message) { %>
                        <div class="alert <%= message.includes('successfully') ? 'alert-success' : 'alert-danger' %> alert-dismissible fade show" role="alert">
                            <%= message %>
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    <% } %>

                    <!-- Error alert for same password (initially hidden) -->
                    <div class="alert alert-danger alert-dismissible fade show mb-3" role="alert" id="samePasswordAlert" style="display: none;">
                        New password cannot be the same as current password
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>

                    <form action="/user/change-password" method="POST" id="changePasswordForm">
                        <div class="mb-3">
                            <label for="currentPassword" class="form-label">Current Password</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
                                <button class="btn btn-outline-secondary toggle-password" type="button" data-target="currentPassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <div class="invalid-feedback" id="currentPasswordFeedback"></div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="newPassword" class="form-label">New Password</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="newPassword" name="newPassword" required>
                                <button class="btn btn-outline-secondary toggle-password" type="button" data-target="newPassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <div class="invalid-feedback" id="newPasswordFeedback"></div>
                            
                            <div class="requirements small text-muted mt-2">
                                <p class="mb-1">Password must contain:</p>
                                <ul class="ps-3 mb-0">
                                    <li id="length-check" class="text-muted">At least 8 characters</li>
                                    <li id="uppercase-check" class="text-muted">At least 1 uppercase letter</li>
                                    <li id="lowercase-check" class="text-muted">At least 1 lowercase letter</li>
                                    <li id="number-check" class="text-muted">At least 1 number</li>
                                    <li id="special-check" class="text-muted">At least 1 special character</li>
                                </ul>
                            </div>
                        </div>
                        
                        <div class="mb-4">
                            <label for="confirmPassword" class="form-label">Confirm New Password</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                                <button class="btn btn-outline-secondary toggle-password" type="button" data-target="confirmPassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <div class="invalid-feedback" id="confirmPasswordFeedback"></div>
                        </div>
                        
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <button type="button" class="btn btn-outline-secondary me-md-2" onclick="location.href='/user/profile'">Cancel</button>
                            <button type="submit" class="btn btn-primary" id="submitBtn">Update Password</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<%- include('../partials/user/footer') %>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Toggle password visibility
        document.querySelectorAll('.toggle-password').forEach(button => {
            button.addEventListener('click', function() {
                const targetId = this.getAttribute('data-target');
                const input = document.getElementById(targetId);
                
                if (input.type === 'password') {
                    input.type = 'text';
                    this.innerHTML = '<i class="fas fa-eye-slash"></i>';
                } else {
                    input.type = 'password';
                    this.innerHTML = '<i class="fas fa-eye"></i>';
                }
            });
        });
        
        // Password check
        const newPasswordInput = document.getElementById('newPassword');
        const currentPasswordInput = document.getElementById('currentPassword');
        const samePasswordAlert = document.getElementById('samePasswordAlert');
        const lengthCheck = document.getElementById('length-check');
        const uppercaseCheck = document.getElementById('uppercase-check');
        const lowercaseCheck = document.getElementById('lowercase-check');
        const numberCheck = document.getElementById('number-check');
        const specialCheck = document.getElementById('special-check');
        
        // Check for same password on input
        function checkSamePassword() {
            if (currentPasswordInput.value !== '' && 
                newPasswordInput.value !== '' && 
                currentPasswordInput.value === newPasswordInput.value) {
                samePasswordAlert.style.display = 'block';
                newPasswordInput.classList.add('is-invalid');
                document.getElementById('newPasswordFeedback').textContent = 'New password cannot be the same as current password';
            } else {
                samePasswordAlert.style.display = 'none';
                if (newPasswordInput.classList.contains('is-invalid') && 
                    document.getElementById('newPasswordFeedback').textContent === 'New password cannot be the same as current password') {
                    newPasswordInput.classList.remove('is-invalid');
                }
            }
        }
        
        // Add listeners for both inputs
        newPasswordInput.addEventListener('input', checkSamePassword);
        currentPasswordInput.addEventListener('input', checkSamePassword);
        
        newPasswordInput.addEventListener('input', function() {
            const password = this.value;
            
            // Check length
            if (password.length >= 8) {
                lengthCheck.classList.remove('text-muted');
                lengthCheck.classList.add('text-success');
            } else {
                lengthCheck.classList.remove('text-success');
                lengthCheck.classList.add('text-muted');
            }
            
            // Check uppercase
            if (/[A-Z]/.test(password)) {
                uppercaseCheck.classList.remove('text-muted');
                uppercaseCheck.classList.add('text-success');
            } else {
                uppercaseCheck.classList.remove('text-success');
                uppercaseCheck.classList.add('text-muted');
            }
            
            // Check lowercase
            if (/[a-z]/.test(password)) {
                lowercaseCheck.classList.remove('text-muted');
                lowercaseCheck.classList.add('text-success');
            } else {
                lowercaseCheck.classList.remove('text-success');
                lowercaseCheck.classList.add('text-muted');
            }
            
            // Check number
            if (/[0-9]/.test(password)) {
                numberCheck.classList.remove('text-muted');
                numberCheck.classList.add('text-success');
            } else {
                numberCheck.classList.remove('text-success');
                numberCheck.classList.add('text-muted');
            }
            
            // Check special character
            if (/[^A-Za-z0-9]/.test(password)) {
                specialCheck.classList.remove('text-muted');
                specialCheck.classList.add('text-success');
            } else {
                specialCheck.classList.remove('text-success');
                specialCheck.classList.add('text-muted');
            }
        });
        
        // Form validation
        const form = document.getElementById('changePasswordForm');
        const confirmPasswordInput = document.getElementById('confirmPassword');
        const submitBtn = document.getElementById('submitBtn');
        
        form.addEventListener('submit', function(event) {
            let isValid = true;
            
            // Validate current password
            if (currentPasswordInput.value.trim() === '') {
                currentPasswordInput.classList.add('is-invalid');
                document.getElementById('currentPasswordFeedback').textContent = 'Current password is required';
                isValid = false;
            } else {
                currentPasswordInput.classList.remove('is-invalid');
            }
            
            // Validate new password
            const password = newPasswordInput.value;
            const passwordPatterns = {
                length: password.length >= 8,
                uppercase: /[A-Z]/.test(password),
                lowercase: /[a-z]/.test(password),
                number: /[0-9]/.test(password),
                special: /[^A-Za-z0-9]/.test(password)
            };
            
            if (Object.values(passwordPatterns).filter(Boolean).length < 5) {
                newPasswordInput.classList.add('is-invalid');
                document.getElementById('newPasswordFeedback').textContent = 'Password must meet all requirements';
                isValid = false;
            } else {
                // Only remove the invalid class if it's not invalid for another reason
                if (newPasswordInput.classList.contains('is-invalid') && 
                    document.getElementById('newPasswordFeedback').textContent !== 'New password cannot be the same as current password') {
                    newPasswordInput.classList.remove('is-invalid');
                }
            }
            
            // Check if current password and new password are the same
            if (currentPasswordInput.value === newPasswordInput.value) {
                newPasswordInput.classList.add('is-invalid');
                document.getElementById('newPasswordFeedback').textContent = 'New password cannot be the same as current password';
                samePasswordAlert.style.display = 'block';
                isValid = false;
            }
            
            // Validate confirm password
            if (confirmPasswordInput.value !== password) {
                confirmPasswordInput.classList.add('is-invalid');
                document.getElementById('confirmPasswordFeedback').textContent = 'Passwords do not match';
                isValid = false;
            } else {
                confirmPasswordInput.classList.remove('is-invalid');
            }
            
            if (!isValid) {
                event.preventDefault();
            } else {
                // Disable button to prevent double submission
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...';
            }
        });
    });
</script>