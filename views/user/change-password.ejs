<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Change Password - CHOCOLUXE</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        :root {
            --primary: #4a2c2a;
            --accent: #d1a876;
            --background: #f5e8d4;
            --card-bg: #fff9e6;
            --muted: #888;
        }

        * {
            box-sizing: border-box;
        }

        body, html {
            height: 100%;
            margin: 0;
            background-color: var(--background);
            font-family: 'Nunito Sans', sans-serif;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        /* Navbar Styles */
        .navbar {
            background-color: var(--primary);
            padding: 15px 20px;
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: relative;
            flex-wrap: wrap;
        }

        .navbar .brand {
            font-size: 1.5rem;
            font-weight: 700;
            flex: 1;
        }

        .navbar .brand small {
            display: block;
            font-size: 0.8rem;
            font-weight: 400;
            color: var(--accent);
        }

        .navbar .nav-links {
            display: flex;
            align-items: center;
            gap: 25px;
        }

        .navbar .nav-icons {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .navbar a {
            color: white;
            text-decoration: none;
            font-size: 1rem;
            transition: color 0.3s;
        }

        .navbar a:hover {
            color: var(--accent);
        }

        .navbar .search-bar {
            width: 200px;
            font-size: 0.9rem;
            padding: 8px 12px;
            border: none;
            border-radius: 4px;
        }

        .navbar .menu-toggle {
            display: none;
            font-size: 1.5rem;
            cursor: pointer;
            background: none;
            border: none;
            color: white;
            padding: 5px;
        }

        .user-menu {
            position: relative;
            display: flex;
            align-items: center;
        }

        .user-dropdown {
            display: none;
            position: absolute;
            top: 100%;
            right: 0;
            background-color: var(--primary);
            border: 1px solid var(--accent);
            border-radius: 5px;
            padding: 10px;
            z-index: 1000;
            min-width: 180px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .user-dropdown a {
            display: flex;
            align-items: center;
            padding: 10px 15px;
            color: white;
            font-size: 0.9rem;
            gap: 10px;
            border-radius: 4px;
            transition: background-color 0.3s;
        }

        .user-dropdown a:hover {
            background-color: #5a3c3a;
            color: var(--accent);
        }

        .user-menu.active .user-dropdown {
            display: block;
        }

        /* Content Container */
        .content-container {
            display: flex;
            flex: 1;
            padding: 20px;
            gap: 20px;
            max-width: 1200px;
            margin: 0 auto;
            width: 100%;
        }

        /* Sidebar Styles */
        .sidebar-container {
            width: 280px;
            flex-shrink: 0;
        }

        .sidebar {
            background-color: white;
            border-radius: 8px;
            padding: 24px;
            width: 100%;
            height: fit-content;
            display: flex;
            flex-direction: column;
            border: 1px solid #e5e7eb;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .sidebar .user-profile {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 32px;
            text-align: center;
        }

        .sidebar .username {
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 4px;
        }

        .sidebar .email {
            font-size: 12px;
            color: var(--muted);
        }

        .sidebar nav ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .sidebar nav ul li {
            margin-bottom: 8px;
        }

        .sidebar nav ul li a {
            display: flex;
            align-items: center;
            padding: 12px 16px;
            border-radius: 6px;
            color: var(--muted);
            text-decoration: none;
            transition: all 0.2s;
            font-size: 14px;
        }

        .sidebar nav ul li a.active,
        .sidebar nav ul li a.bg-primary.bg-opacity-10 {
            background-color: #eff6ff;
            color: #2563eb;
        }

        .sidebar nav ul li a:hover {
            background-color: #f9fafb;
            color: var(--primary);
        }

        .sidebar nav ul li a i {
            margin-right: 12px;
            font-size: 16px;
            width: 20px;
            text-align: center;
        }

        .sidebar .logout a:hover {
            color: #ef4444;
            background-color: #fef2f2;
        }

        /* Mobile Sidebar Overlay */
        .sidebar-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }

        .sidebar-mobile {
            display: none;
            position: fixed;
            top: 0;
            left: -100%;
            width: 280px;
            height: 100%;
            background-color: white;
            z-index: 1000;
            transition: left 0.3s ease;
            overflow-y: auto;
        }

        .sidebar-mobile.active {
            left: 0;
        }

        .sidebar-mobile .sidebar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px;
            border-bottom: 1px solid #e5e7eb;
            background-color: var(--primary);
            color: white;
        }

        .sidebar-mobile .sidebar-header h3 {
            margin: 0;
            font-size: 1.2rem;
        }

        .sidebar-mobile .close-sidebar {
            background: none;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
            padding: 5px;
        }

        /* Mobile Menu Button */
        .mobile-menu-btn {
            background-color: var(--primary);
            color: white;
            border: 2px solid var(--primary);
            padding: 10px 16px;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            text-decoration: none;
            font-size: 0.9rem;
            margin-bottom: 15px;
        }

        .mobile-menu-btn:hover {
            background-color: var(--accent);
            border-color: var(--accent);
            color: white;
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(74, 44, 42, 0.2);
        }

        .mobile-menu-btn:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(74, 44, 42, 0.2);
        }

        /* Main Content */
        .main-content {
            flex: 1;
            min-width: 0;
        }

        /* Password Card Styles */
        .password-card {
            background-color: var(--card-bg);
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(74, 44, 42, 0.1);
            border: none;
            overflow: hidden;
        }

        .password-header {
            background-color: white;
            padding: 20px 25px;
            border-bottom: 1px solid #e5e7eb;
        }

        .password-title {
            color: var(--primary);
            font-weight: 700;
            margin: 0;
            font-size: 1.3rem;
        }

        .password-body {
            padding: 25px;
        }

        /* Form Styles */
        .form-label {
            color: var(--primary);
            font-weight: 600;
            margin-bottom: 8px;
            font-size: 0.95rem;
        }

        .form-control {
            border: 2px solid #ddd;
            border-radius: 8px;
            padding: 12px 15px;
            transition: all 0.3s;
            font-size: 1rem;
            background-color: white;
        }

        .form-control:focus {
            border-color: var(--accent);
            box-shadow: 0 0 0 3px rgba(209, 168, 118, 0.25);
            outline: none;
        }

        .form-control.is-invalid {
            border-color: #dc3545;
        }

        .form-control.is-invalid:focus {
            border-color: #dc3545;
            box-shadow: 0 0 0 3px rgba(220, 53, 69, 0.25);
        }

        .input-group {
            position: relative;
        }

        .toggle-password {
            background-color: transparent;
            border: 2px solid #ddd;
            border-left: none;
            color: var(--muted);
            padding: 12px 15px;
            border-radius: 0 8px 8px 0;
            transition: all 0.3s;
        }

        .toggle-password:hover {
            background-color: var(--accent);
            border-color: var(--accent);
            color: white;
        }

        .toggle-password:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(209, 168, 118, 0.25);
        }

        /* Password Requirements */
        .requirements {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
            margin-top: 10px;
        }

        .requirements ul {
            margin: 0;
            padding-left: 20px;
        }

        .requirements li {
            margin-bottom: 5px;
            transition: color 0.3s;
        }

        .requirements li.text-success {
            color: #28a745 !important;
        }

        .requirements li.text-muted {
            color: var(--muted) !important;
        }

        /* Alert Styles */
        .alert {
            border-radius: 10px;
            border: none;
            padding: 15px 20px;
            margin-bottom: 20px;
        }

        .alert-success {
            background-color: #d4edda;
            color: #155724;
        }

        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
        }

        .invalid-feedback {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 5px;
        }

        /* Button Styles */
        .btn-primary {
            background-color: var(--primary);
            border-color: var(--primary);
            color: white;
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s;
        }

        .btn-primary:hover {
            background-color: #5a3c3a;
            border-color: #5a3c3a;
            transform: translateY(-1px);
        }

        .btn-primary:disabled {
            background-color: var(--muted);
            border-color: var(--muted);
            transform: none;
        }

        .btn-outline-secondary {
            color: var(--muted);
            border-color: var(--muted);
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s;
        }

        .btn-outline-secondary:hover {
            background-color: var(--muted);
            border-color: var(--muted);
            color: white;
        }

        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 15px;
            margin-top: 30px;
            flex-wrap: wrap;
        }

        /* Footer */
        .footer {
            background-color: var(--primary);
            color: white;
            padding: 20px 0;
            margin-top: auto;
        }

        .footer .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .footer .row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 20px;
        }

        .footer a {
            color: var(--accent);
            margin: 0 10px;
            text-decoration: none;
            font-size: 0.9rem;
            transition: color 0.3s;
        }

        .footer a:hover {
            color: white;
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .content-container {
                padding: 15px;
                gap: 15px;
            }

            .sidebar-container {
                width: 250px;
            }

            .password-body {
                padding: 20px;
            }
        }

        @media (max-width: 768px) {
            .navbar .nav-links,
            .navbar .nav-icons {
                display: none;
            }

            .navbar .menu-toggle {
                display: block;
            }

            .navbar .search-bar {
                width: 150px;
            }

            .content-container {
                flex-direction: column;
                padding: 15px;
            }

            .sidebar-container {
                display: none;
            }

            .sidebar-overlay.active {
                display: block;
            }

            .sidebar-mobile {
                display: block;
            }

            .password-header {
                padding: 15px 20px;
            }

            .password-title {
                font-size: 1.2rem;
                text-align: center;
            }

            .password-body {
                padding: 20px;
            }

            .form-actions {
                flex-direction: column;
                align-items: stretch;
            }

            .form-actions .btn {
                width: 100%;
                justify-content: center;
            }
        }

        @media (max-width: 576px) {
            .navbar {
                padding: 10px 15px;
            }

            .navbar .brand {
                font-size: 1.2rem;
            }

            .navbar .brand small {
                font-size: 0.7rem;
            }

            .navbar .search-bar {
                width: 120px;
                font-size: 0.8rem;
                padding: 6px 10px;
            }

            .content-container {
                padding: 10px;
            }

            .password-card {
                border-radius: 10px;
            }

            .password-header {
                padding: 15px;
            }

            .password-title {
                font-size: 1.1rem;
            }

            .password-body {
                padding: 15px;
            }

            .form-control,
            .toggle-password {
                padding: 10px 12px;
                font-size: 0.9rem;
            }

            .requirements {
                padding: 12px;
            }

            .mobile-menu-btn {
                padding: 8px 14px;
                font-size: 0.85rem;
            }

            .footer .row {
                flex-direction: column;
                text-align: center;
                gap: 10px;
            }

            .footer a {
                font-size: 0.8rem;
                margin: 0 5px;
            }
        }

        /* Utility Classes */
        .d-none-mobile {
            display: block;
        }

        @media (max-width: 768px) {
            .d-none-mobile {
                display: none;
            }
        }
    </style>
</head>
<body>
    <%- include('../partials/user/header') %>

    <!-- Mobile Sidebar Overlay -->
    <div class="sidebar-overlay" id="sidebarOverlay" onclick="closeMobileSidebar()"></div>

    <!-- Mobile Sidebar -->
    <div class="sidebar-mobile" id="mobileSidebar">
        <div class="sidebar-header">
            <h3>Menu</h3>
            <button class="close-sidebar" onclick="closeMobileSidebar()">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="sidebar">
            <%- include('../partials/user/sidebar', { activeTab: 'password' }) %>
        </div>
    </div>

    <div class="content-container">
        <div class="sidebar-container d-none-mobile">
            <%- include('../partials/user/sidebar', { activeTab: 'password' }) %>
        </div>
        
        <div class="main-content">
            <!-- Mobile Menu Button -->
            <div class="d-block d-md-none">
                <button class="mobile-menu-btn" onclick="openMobileSidebar()">
                    <i class="fas fa-bars"></i> Menu
                </button>
            </div>
            
            <div class="password-card">
                <div class="password-header">
                    <h5 class="password-title">Change Password</h5>
                </div>
                <div class="password-body">
                    <% if (message) { %>
                        <div class="alert <%= message.includes('successfully') ? 'alert-success' : 'alert-danger' %> alert-dismissible fade show" role="alert">
                            <%= message %>
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    <% } %>

                    <!-- Same Password Alert -->
                    <div class="alert alert-danger alert-dismissible fade show" role="alert" id="samePasswordAlert" style="display: none;">
                        New password cannot be the same as current password
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>

                    <form action="/user/change-password" method="POST" id="changePasswordForm">
                        <div class="mb-3">
                            <label for="currentPassword" class="form-label">Current Password</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
                                <button class="btn toggle-password" type="button" data-target="currentPassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <div class="invalid-feedback" id="currentPasswordFeedback"></div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="newPassword" class="form-label">New Password</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="newPassword" name="newPassword" required>
                                <button class="btn toggle-password" type="button" data-target="newPassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <div class="invalid-feedback" id="newPasswordFeedback"></div>
                            
                            <div class="requirements">
                                <p class="mb-2 fw-medium">Password must contain:</p>
                                <ul class="mb-0">
                                    <li id="length-check" class="text-muted">At least 8 characters</li>
                                    <li id="uppercase-check" class="text-muted">At least 1 uppercase letter</li>
                                    <li id="lowercase-check" class="text-muted">At least 1 lowercase letter</li>
                                    <li id="number-check" class="text-muted">At least 1 number</li>
                                    <li id="special-check" class="text-muted">At least 1 special character</li>
                                </ul>
                            </div>
                        </div>
                        
                        <div class="mb-4">
                            <label for="confirmPassword" class="form-label">Confirm New Password</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                                <button class="btn toggle-password" type="button" data-target="confirmPassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <div class="invalid-feedback" id="confirmPasswordFeedback"></div>
                        </div>
                        
                        <div class="form-actions">
                            <button type="button" class="btn btn-outline-secondary" onclick="location.href='/user/profile'">Cancel</button>
                            <button type="submit" class="btn btn-primary" id="submitBtn">Update Password</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <%- include('../partials/user/footer') %>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function toggleMenu() {
            const navbar = document.querySelector('.navbar');
            navbar.classList.toggle('active');
        }

        function toggleUserMenu() {
            const userMenu = document.querySelector('.user-menu');
            userMenu.classList.toggle('active');
        }

        function openMobileSidebar() {
            const overlay = document.getElementById('sidebarOverlay');
            const sidebar = document.getElementById('mobileSidebar');
            overlay.classList.add('active');
            sidebar.classList.add('active');
            document.body.style.overflow = 'hidden';
        }

        function closeMobileSidebar() {
            const overlay = document.getElementById('sidebarOverlay');
            const sidebar = document.getElementById('mobileSidebar');
            overlay.classList.remove('active');
            sidebar.classList.remove('active');
            document.body.style.overflow = 'auto';
        }

        // Close user menu when clicking outside
        document.addEventListener('click', function(event) {
            const userMenu = document.querySelector('.user-menu');
            if (userMenu) {
                const isClickInside = userMenu.contains(event.target);
                if (!isClickInside && userMenu.classList.contains('active')) {
                    userMenu.classList.remove('active');
                }
            }
        });

        // Close mobile sidebar on window resize
        window.addEventListener('resize', function() {
            if (window.innerWidth > 768) {
                closeMobileSidebar();
            }
        });

        // Handle escape key to close mobile sidebar
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                closeMobileSidebar();
            }
        });

        document.addEventListener('DOMContentLoaded', function() {
            // Password visibility toggle
            document.querySelectorAll('.toggle-password').forEach(button => {
                button.addEventListener('click', function() {
                    const targetId = this.getAttribute('data-target');
                    const input = document.getElementById(targetId);
                    
                    if (input.type === 'password') {
                        input.type = 'text';
                        this.innerHTML = '<i class="fas fa-eye-slash"></i>';
                    } else {
                        input.type = 'password';
                        this.innerHTML = '<i class="fas fa-eye"></i>';
                    }
                });
            });
            
            // Password validation elements
            const newPasswordInput = document.getElementById('newPassword');
            const currentPasswordInput = document.getElementById('currentPassword');
            const samePasswordAlert = document.getElementById('samePasswordAlert');
            const lengthCheck = document.getElementById('length-check');
            const uppercaseCheck = document.getElementById('uppercase-check');
            const lowercaseCheck = document.getElementById('lowercase-check');
            const numberCheck = document.getElementById('number-check');
            const specialCheck = document.getElementById('special-check');
            
            // Check if new password is same as current password
            function checkSamePassword() {
                if (currentPasswordInput.value !== '' && 
                    newPasswordInput.value !== '' && 
                    currentPasswordInput.value === newPasswordInput.value) {
                    samePasswordAlert.style.display = 'block';
                    newPasswordInput.classList.add('is-invalid');
                    document.getElementById('newPasswordFeedback').textContent = 'New password cannot be the same as current password';
                } else {
                    samePasswordAlert.style.display = 'none';
                    if (newPasswordInput.classList.contains('is-invalid') && 
                        document.getElementById('newPasswordFeedback').textContent === 'New password cannot be the same as current password') {
                        newPasswordInput.classList.remove('is-invalid');
                    }
                }
            }
            
            // Add event listeners for same password check
            newPasswordInput.addEventListener('input', checkSamePassword);
            currentPasswordInput.addEventListener('input', checkSamePassword);
            
            // Real-time password validation
            newPasswordInput.addEventListener('input', function() {
                const password = this.value;
                
                // Length check
                if (password.length >= 8) {
                    lengthCheck.classList.remove('text-muted');
                    lengthCheck.classList.add('text-success');
                } else {
                    lengthCheck.classList.remove('text-success');
                    lengthCheck.classList.add('text-muted');
                }
                
                // Uppercase check
                if (/[A-Z]/.test(password)) {
                    uppercaseCheck.classList.remove('text-muted');
                    uppercaseCheck.classList.add('text-success');
                } else {
                    uppercaseCheck.classList.remove('text-success');
                    uppercaseCheck.classList.add('text-muted');
                }
                
                // Lowercase check
                if (/[a-z]/.test(password)) {
                    lowercaseCheck.classList.remove('text-muted');
                    lowercaseCheck.classList.add('text-success');
                } else {
                    lowercaseCheck.classList.remove('text-success');
                    lowercaseCheck.classList.add('text-muted');
                }
                
                // Number check
                if (/[0-9]/.test(password)) {
                    numberCheck.classList.remove('text-muted');
                    numberCheck.classList.add('text-success');
                } else {
                    numberCheck.classList.remove('text-success');
                    numberCheck.classList.add('text-muted');
                }
                
                // Special character check
                if (/[^A-Za-z0-9]/.test(password)) {
                    specialCheck.classList.remove('text-muted');
                    specialCheck.classList.add('text-success');
                } else {
                    specialCheck.classList.remove('text-success');
                    specialCheck.classList.add('text-muted');
                }
            });
        
            // Form submission validation
            const form = document.getElementById('changePasswordForm');
            const confirmPasswordInput = document.getElementById('confirmPassword');
            const submitBtn = document.getElementById('submitBtn');
            
            form.addEventListener('submit', function(event) {
                let isValid = true;
                
                // Current password validation
                if (currentPasswordInput.value.trim() === '') {
                    currentPasswordInput.classList.add('is-invalid');
                    document.getElementById('currentPasswordFeedback').textContent = 'Current password is required';
                    isValid = false;
                } else {
                    currentPasswordInput.classList.remove('is-invalid');
                }
                
                // New password validation
                const password = newPasswordInput.value;
                const passwordPatterns = {
                    length: password.length >= 8,
                    uppercase: /[A-Z]/.test(password),
                    lowercase: /[a-z]/.test(password),
                    number: /[0-9]/.test(password),
                    special: /[^A-Za-z0-9]/.test(password)
                };
                
                if (Object.values(passwordPatterns).filter(Boolean).length < 5) {
                    newPasswordInput.classList.add('is-invalid');
                    document.getElementById('newPasswordFeedback').textContent = 'Password must meet all requirements';
                    isValid = false;
                } else {
                    // Only remove invalid class if it's not due to same password error
                    if (newPasswordInput.classList.contains('is-invalid') && 
                        document.getElementById('newPasswordFeedback').textContent !== 'New password cannot be the same as current password') {
                        newPasswordInput.classList.remove('is-invalid');
                    }
                }
                
                // Same password check
                if (currentPasswordInput.value === newPasswordInput.value) {
                    newPasswordInput.classList.add('is-invalid');
                    document.getElementById('newPasswordFeedback').textContent = 'New password cannot be the same as current password';
                    samePasswordAlert.style.display = 'block';
                    isValid = false;
                }
                
                // Confirm password validation
                if (confirmPasswordInput.value !== password) {
                    confirmPasswordInput.classList.add('is-invalid');
                    document.getElementById('confirmPasswordFeedback').textContent = 'Passwords do not match';
                    isValid = false;
                } else {
                    confirmPasswordInput.classList.remove('is-invalid');
                }
                
                if (!isValid) {
                    event.preventDefault();
                } else {
                    // Show loading state
                    submitBtn.disabled = true;
                    submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...';
                }
            });
        });
    </script>
</body>
</html>