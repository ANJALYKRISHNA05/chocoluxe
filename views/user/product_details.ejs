<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %> - CHOCOLUXE</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
  <%- include('../partials/user/header') %>

  <section class="product-details-section py-5">
    <div class="container">
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="/">Home</a></li>
          <li class="breadcrumb-item"><a href="/products"><%= product.category.name %></a></li>
          <li class="breadcrumb-item active" aria-current="page"><%= product.productName %></li>
        </ol>
      </nav>

      <div class="row">
        <div class="col-lg-6 mb-4">
          <% if (product.variants && product.variants.length > 0) { %>
            <div class="product-image-container">
              <div class="main-image-container mb-3">
                <img id="main-product-image" src="<%= product.variants[0].productImage[0] %>" class="img-fluid rounded main-image" alt="<%= product.productName %>">
                <div class="zoom-lens"></div>
              </div>
              <div class="zoom-result"></div>
              <div class="product-thumbnails d-flex">
                <% product.variants[0].productImage.forEach((image, index) => { %>
                  <div class="thumbnail-container me-2">
                    <img src="<%= image %>" class="img-thumbnail product-thumbnail <%= index === 0 ? 'active' : '' %>" 
                         alt="Thumbnail <%= index + 1 %>"
                         onclick="changeMainImage('<%= image %>', this)">
                  </div>
                <% }); %>
              </div>
            </div>
          <% } %>
        </div>

        <div class="col-lg-6">
          <h1 class="product-title mb-3"><%= product.productName %></h1>
          <div class="product-category mb-3">
            <span class="badge bg-secondary"><%= product.category.name %></span>
          </div>

          <div class="product-pricing mb-4">
            <% if (product.variants && product.variants.length > 0) { %>
              <% const variant = product.variants[0]; %>
              <% if (variant.effectiveOffer > 0) { %>
                <span class="sale-price fs-2">₹<%= variant.offerPrice.toFixed(2) %></span>
                <span class="regular-price text-decoration-line-through ms-2">₹<%= variant.originalPrice.toFixed(2) %></span>
                <span class="offer-badge"><%= variant.effectiveOffer %>% OFF</span>
              <% } else if (variant.salePrice < variant.regularPrice) { %>
                <span class="sale-price fs-2">₹<%= variant.salePrice.toFixed(2) %></span>
                <span class="regular-price text-decoration-line-through ms-2">₹<%= variant.regularPrice.toFixed(2) %></span>
                <% const discount = Math.round((variant.regularPrice - variant.salePrice) / variant.regularPrice * 100); %>
                <span class="offer-badge"><%= discount %>% OFF</span>
              <% } else { %>
                <span class="regular-price fs-2">₹<%= variant.regularPrice.toFixed(2) %></span>
              <% } %>
            <% } %>
          </div>

          <div class="product-description mb-4">
            <h5>Description</h5>
            <p><%= product.description %></p>
          </div>

          <div class="product-variants mb-4">
            <h5>Product Variants</h5>
            <form id="add-to-cart-form">
              <input type="hidden" name="productId" value="<%= product._id %>">
              <input type="hidden" id="selected-variant-id" name="variantId" value="<%= product.variants[0]._id %>">
              
              <div class="variant-cards-container mb-4">
                <div class="row">
                  <% product.variants.forEach((variant, index) => { %>
                    <div class="col-md-4 col-sm-6 mb-3">
                      <div class="card variant-card <%= index === 0 ? 'selected' : '' %>" 
                           data-variant-id="<%= variant._id %>"
                           data-flavor="<%= variant.flavor %>"
                           data-sugar="<%= variant.sugarLevel %>"
                           data-weight="<%= variant.weight %>"
                           data-stock="<%= variant.stock_quantity %>"
                           data-regular-price="<%= variant.regularPrice.toFixed(2) %>"
                           data-sale-price="<%= variant.salePrice.toFixed(2) %>"
                           data-offer-price="<%= variant.offerPrice.toFixed(2) %>"
                           data-effective-offer="<%= variant.effectiveOffer %>"
                           data-original-price="<%= variant.originalPrice.toFixed(2) %>"
                           data-images="<%= JSON.stringify(variant.productImage) %>">
                        <div class="card-body">
                          <h6 class="variant-flavor"><%= variant.flavor %></h6>
                          <div class="variant-details">
                            <span class="badge bg-light text-dark me-1"><%= variant.sugarLevel %> sugar</span>
                            <span class="badge bg-light text-dark"><%= variant.weight %>g</span>
                          </div>
                          <div class="variant-price mt-2">
                            <% if (variant.effectiveOffer > 0) { %>
                              <span class="sale-price">₹<%= variant.offerPrice.toFixed(2) %></span>
                              <span class="regular-price text-decoration-line-through">₹<%= variant.originalPrice.toFixed(2) %></span>
                              <span class="offer-badge"><%= variant.effectiveOffer %>% OFF</span>
                            <% } else if (variant.salePrice < variant.regularPrice) { %>
                              <span class="sale-price">₹<%= variant.salePrice.toFixed(2) %></span>
                              <span class="regular-price text-decoration-line-through">₹<%= variant.regularPrice.toFixed(2) %></span>
                              <% const discount = Math.round((variant.regularPrice - variant.salePrice) / variant.regularPrice * 100); %>
                              <span class="offer-badge"><%= discount %>% OFF</span>
                            <% } else { %>
                              <span class="regular-price">₹<%= variant.regularPrice.toFixed(2) %></span>
                            <% } %>
                          </div>
                          <div class="stock-info mt-1 <%= variant.stock_quantity > 0 ? 'text-success' : 'text-danger' %>">
                            <%= variant.stock_quantity > 0 ? `In Stock: ${variant.stock_quantity}` : 'Out of Stock' %>
                          </div>
                        </div>
                      </div>
                    </div>
                  <% }); %>
                </div>
              </div>

              <div class="mb-3">
                <label for="quantity" class="form-label">Quantity</label>
                <div class="input-group quantity-selector" style="width: 150px;">
                  <button type="button" class="btn btn-outline-secondary" id="quantity-minus">-</button>
                  <input type="number" class="form-control text-center" id="quantity" name="quantity" value="1" min="1" max="10">
                  <button type="button" class="btn btn-outline-secondary" id="quantity-plus">+</button>
                </div>
                <div id="stock-status" class="text-success mt-2">
                  In Stock: <span id="available-stock">
                    <% if (product.variants && product.variants.length > 0) { %>
                      <%= product.variants[0].stock_quantity %>
                    <% } else { %>
                      0
                    <% } %>
                  </span> items
                </div>
              </div>

              <div class="action-buttons mt-4">
                <button type="button" id="add-to-cart-btn" class="btn btn-primary btn-lg">
                  <i class="fas fa-shopping-cart me-2"></i>Add to Cart
                </button>
                <button type="button" id="add-to-wishlist-btn" class="btn btn-outline-danger btn-lg">
                  <i class="fas fa-heart me-2"></i>Add to Wishlist
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>

      <% if (relatedProducts && relatedProducts.length > 0) { %>
        <div class="related-products mt-5">
          <h3 class="section-title mb-4">Related Products</h3>
          <div class="row">
            <% relatedProducts.forEach(relProduct => { %>
              <div class="col-md-3 col-sm-6 mb-4">
                <div class="card product-card h-100">
                  <% if (relProduct.variants && relProduct.variants.length > 0) { %>
                    <a href="/product/<%= relProduct._id %>">
                      <img src="<%= relProduct.variants[0].productImage[0] %>" class="card-img-top product-image" alt="<%= relProduct.productName %>">
                    </a>
                    <div class="card-body">
                      <h5 class="card-title">
                        <a href="/product/<%= relProduct._id %>" class="text-decoration-none text-dark"><%= relProduct.productName %></a>
                      </h5>
                      <p class="card-text text-truncate"><%= relProduct.description %></p>
                      <div class="product-price">
                        <% const variant = relProduct.variants[0]; %>
                        <% if (variant.effectiveOffer > 0) { %>
                          <span class="sale-price">₹<%= variant.offerPrice.toFixed(2) %></span>
                          <span class="regular-price text-decoration-line-through ms-2">₹<%= variant.originalPrice.toFixed(2) %></span>
                          <span class="offer-badge"><%= variant.effectiveOffer %>% OFF</span>
                        <% } else if (variant.salePrice < variant.regularPrice) { %>
                          <span class="sale-price">₹<%= variant.salePrice.toFixed(2) %></span>
                          <span class="regular-price text-decoration-line-through ms-2">₹<%= variant.regularPrice.toFixed(2) %></span>
                          <% const discount = Math.round((variant.regularPrice - variant.salePrice) / variant.regularPrice * 100); %>
                          <span class="offer-badge"><%= discount %>% OFF</span>
                        <% } else { %>
                          <span class="regular-price">₹<%= variant.regularPrice.toFixed(2) %></span>
                        <% } %>
                      </div>
                    </div>
                  <% } %>
                </div>
              </div>
            <% }); %>
          </div>
        </div>
      <% } %>
    </div>
  </section>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const productVariants = <%- JSON.stringify(product.variants) %>;
      let currentVariant = productVariants[0];

      const variantCards = document.querySelectorAll('.variant-card');
      const quantityInput = document.getElementById('quantity');
      const stockStatus = document.getElementById('available-stock');
      const addToCartBtn = document.getElementById('add-to-cart-btn');
      const addToWishlistBtn = document.getElementById('add-to-wishlist-btn');
      const mainImage = document.getElementById('main-product-image');
      const selectedVariantIdInput = document.getElementById('selected-variant-id');
      const zoomLens = document.querySelector('.zoom-lens');
      const zoomResult = document.querySelector('.zoom-result');
      
      const zoomFactor = 2.5;
      
      function initializeZoom() {
        zoomResult.style.backgroundImage = `url(${mainImage.src})`;
        zoomResult.style.backgroundSize = `${mainImage.width * zoomFactor}px ${mainImage.height * zoomFactor}px`;
        
        mainImage.parentElement.addEventListener('mousemove', moveLens);
        mainImage.parentElement.addEventListener('mouseenter', showLens);
        mainImage.parentElement.addEventListener('mouseleave', hideLens);
        
        mainImage.parentElement.addEventListener('touchmove', handleTouchMove);
        mainImage.parentElement.addEventListener('touchstart', showLens);
        mainImage.parentElement.addEventListener('touchend', hideLens);
      }
      
      function showLens() {
        zoomLens.style.display = 'block';
        zoomResult.style.display = 'block';
      }
      
      function hideLens() {
        zoomLens.style.display = 'none';
        zoomResult.style.display = 'none';
      }
      
      function moveLens(e) {
        e.preventDefault();
        const pos = getCursorPos(e);
        let x = pos.x - (zoomLens.offsetWidth / 2);
        let y = pos.y - (zoomLens.offsetHeight / 2);
        
        if (x > mainImage.width - zoomLens.offsetWidth) x = mainImage.width - zoomLens.offsetWidth;
        if (x < 0) x = 0;
        if (y > mainImage.height - zoomLens.offsetHeight) y = mainImage.height - zoomLens.offsetHeight;
        if (y < 0) y = 0;
        
        zoomLens.style.left = x + 'px';
        zoomLens.style.top = y + 'px';
        
        zoomResult.style.backgroundPosition = `-${x * zoomFactor}px -${y * zoomFactor}px`;
      }
      
      function handleTouchMove(e) {
        e.preventDefault();
        const touch = e.touches[0];
        moveLens({ clientX: touch.clientX, clientY: touch.clientY });
      }
      
      function getCursorPos(e) {
        const rect = mainImage.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;
        return { x, y };
      }
      
      document.getElementById('quantity-minus').addEventListener('click', function() {
        const currentValue = parseInt(quantityInput.value);
        if (currentValue > 1) {
          quantityInput.value = currentValue - 1;
        }
      });
      
      document.getElementById('quantity-plus').addEventListener('click', function() {
        const currentValue = parseInt(quantityInput.value);
        if (currentValue < currentVariant.stock_quantity) {
          quantityInput.value = currentValue + 1;
        }
      });
      
      function updateProductInfo(variantCard) {
        const variantId = variantCard.dataset.variantId;
        const stockQuantity = parseInt(variantCard.dataset.stock);
        const regularPrice = parseFloat(variantCard.dataset.regularPrice);
        const salePrice = parseFloat(variantCard.dataset.salePrice);
        const offerPrice = parseFloat(variantCard.dataset.offerPrice);
        const effectiveOffer = parseFloat(variantCard.dataset.effectiveOffer);
        const originalPrice = parseFloat(variantCard.dataset.originalPrice);
        const images = JSON.parse(variantCard.dataset.images);
        
        currentVariant = productVariants.find(v => v._id === variantId);
        
        if (currentVariant) {
          selectedVariantIdInput.value = variantId;
          
          const priceContainer = document.querySelector('.product-pricing');
          if (effectiveOffer > 0) {
            priceContainer.innerHTML = `
              <span class="sale-price fs-2">₹${offerPrice.toFixed(2)}</span>
              <span class="regular-price text-decoration-line-through ms-2">₹${originalPrice.toFixed(2)}</span>
              <span class="offer-badge">${effectiveOffer}% OFF</span>
            `;
          } else if (salePrice < regularPrice) {
            const discount = Math.round((regularPrice - salePrice) / regularPrice * 100);
            priceContainer.innerHTML = `
              <span class="sale-price fs-2">₹${salePrice.toFixed(2)}</span>
              <span class="regular-price text-decoration-line-through ms-2">₹${regularPrice.toFixed(2)}</span>
              <span class="offer-badge">${discount}% OFF</span>
            `;
          } else {
            priceContainer.innerHTML = `<span class="regular-price fs-2">₹${regularPrice.toFixed(2)}</span>`;
          }
          
          stockStatus.textContent = stockQuantity;
          
          if (images && images.length > 0) {
            mainImage.src = images[0];
            zoomResult.style.backgroundImage = `url(${mainImage.src})`;
            
            const thumbnailContainer = document.querySelector('.product-thumbnails');
            thumbnailContainer.innerHTML = '';
            
            images.forEach((image, index) => {
              const thumbnailDiv = document.createElement('div');
              thumbnailDiv.className = 'thumbnail-container me-2';
              thumbnailDiv.innerHTML = `
                <img src="${image}" class="img-thumbnail product-thumbnail ${index === 0 ? 'active' : ''}" 
                     alt="Thumbnail ${index + 1}" onclick="changeMainImage('${image}', this)">
              `;
              thumbnailContainer.appendChild(thumbnailDiv);
            });
          }
          
          if (stockQuantity > 0) {
            addToCartBtn.disabled = false;
            stockStatus.parentElement.className = 'text-success mt-2';
            quantityInput.max = stockQuantity;
            if (parseInt(quantityInput.value) > stockQuantity) {
              quantityInput.value = stockQuantity;
            }
          } else {
            addToCartBtn.disabled = true;
            stockStatus.parentElement.className = 'text-danger mt-2';
          }
        }
      }
      
      variantCards.forEach(card => {
        card.addEventListener('click', function() {
          variantCards.forEach(c => c.classList.remove('selected'));
          this.classList.add('selected');
          updateProductInfo(this);
        });
      });

      addToCartBtn.addEventListener('click', function() {
        const productId = document.querySelector('input[name="productId"]').value;
        const variantId = document.getElementById('selected-variant-id').value;
        const quantity = parseInt(document.getElementById('quantity').value);
        
        console.log('Adding to cart:', { productId, variantId, quantity });
        
        fetch('/add-to-cart', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            productId,
            variantId,
            quantity
          }),
        })
        .then(response => response.json())
        .then(data => {
          console.log('Add to cart response:', data);
          if (data.success) {
            Swal.fire('Success', 'Product added to cart successfully!', 'success');
            // Update both cart and wishlist badges
            if (typeof window.updateCartBadge === 'function') {
              window.updateCartBadge(data.itemCount);
            }
            if (typeof window.updateWishlistBadge === 'function' && data.wishlistItemCount !== undefined) {
              window.updateWishlistBadge(data.wishlistItemCount);
            }
          } else if (data.requireLogin) {
            localStorage.setItem('returnToUrl', window.location.href);
            
            Swal.fire({
              title: 'Login Required',
              text: data.message,
              icon: 'info',
              showCancelButton: true,
              confirmButtonColor: '#8b5a2b',
              cancelButtonColor: '#6c757d',
              confirmButtonText: 'Login Now',
              cancelButtonText: 'Continue Exploring'
            }).then((result) => {
              if (result.isConfirmed) {
                window.location.href = data.redirectUrl;
              }
            });
          } else {
            Swal.fire('Error', data.message || 'Failed to add product to cart', 'error');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          Swal.fire('Error', 'An error occurred. Please try again.', 'error');
        });
      });

      addToWishlistBtn.addEventListener('click', function() {
        const productId = document.querySelector('input[name="productId"]').value;
        const variantId = document.getElementById('selected-variant-id').value;
        
        console.log('Adding to wishlist:', { productId, variantId });
        
        fetch('/add-to-wishlist', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            productId,
            variantId
          }),
        })
        .then(response => response.json())
        .then(data => {
          console.log('Add to wishlist response:', data);
          if (data.success) {
            Swal.fire('Success', 'Product added to wishlist successfully!', 'success');
            // Update wishlist badge
            if (typeof window.updateWishlistBadge === 'function') {
              window.updateWishlistBadge(data.itemCount);
            }
          } else if (data.requireLogin) {
            localStorage.setItem('returnToUrl', window.location.href);
            
            Swal.fire({
              title: 'Login Required',
              text: data.message,
              icon: 'info',
              showCancelButton: true,
              confirmButtonColor: '#8b5a2b',
              cancelButtonColor: '#6c757d',
              confirmButtonText: 'Login Now',
              cancelButtonText: 'Continue Exploring'
            }).then((result) => {
              if (result.isConfirmed) {
                window.location.href = data.redirectUrl;
              }
            });
          } else {
            Swal.fire('Error', data.message || 'Failed to add product to wishlist', 'error');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          Swal.fire('Error', 'An error occurred. Please try again.', 'error');
        });
      });
      
      if (variantCards.length > 0) {
        updateProductInfo(variantCards[0]);
      }
      initializeZoom();
    });

    function changeMainImage(imageSrc, thumbnailElement) {
      const mainImage = document.getElementById('main-product-image');
      const zoomResult = document.querySelector('.zoom-result');
      const zoomFactor = 2.5;
      
      mainImage.src = imageSrc;
      zoomResult.style.backgroundImage = `url(${imageSrc})`;
      
      mainImage.onload = function() {
        zoomResult.style.backgroundSize = `${mainImage.width * zoomFactor}px ${mainImage.height * zoomFactor}px`;
      };
      
      document.querySelectorAll('.product-thumbnail').forEach(thumb => {
        thumb.classList.remove('active');
      });
      thumbnailElement.classList.add('active');
    }
  </script>

  <style>
    @import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&display=swap');
    
    .product-details-section {
      background-color: #fcf9f7;
      padding: 3rem 0;
    }
    
    .product-image-container {
      position: relative;
      margin-bottom: 1.5rem;
    }
    
    .main-image-container {
      height: 450px;
      display: flex;
      align-items: center;
      justify-content: center;
      overflow: hidden;
      background-color: #fff;
      border-radius: 12px;
      position: relative;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
      transition: all 0.4s ease;
    }
    
    .main-image-container:hover {
      box-shadow: 0 15px 35px rgba(0, 0, 0, 0.12);
    }
    
    .main-image {
      max-height: 100%;
      object-fit: contain;
      transition: transform 0.5s ease;
    }
    
    .main-image-container:hover .main-image {
      transform: scale(1.03);
    }
    
    .zoom-lens {
      position: absolute;
      width: 120px;
      height: 120px;
      border: 2px solid #8b5a2b;
      background-color: rgba(139, 90, 43, 0.15);
      cursor: none;
      display: none;
      border-radius: 50%;
      backdrop-filter: blur(1px);
    }
    
    .zoom-result {
      position: absolute;
      top: 0;
      left: 100%;
      width: 350px;
      height: 350px;
      border: none;
      background-repeat: no-repeat;
      display: none;
      border-radius: 12px;
      box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);
      z-index: 1000;
      overflow: hidden;
    }
    
    .product-thumbnails {
      display: flex;
      overflow-x: auto;
      padding: 1rem 0;
      gap: 0.75rem;
      scrollbar-width: thin;
      scrollbar-color: #8b5a2b #f0e6dd;
    }
    
    .product-thumbnails::-webkit-scrollbar {
      height: 6px;
    }
    
    .product-thumbnails::-webkit-scrollbar-track {
      background: #f0e6dd;
      border-radius: 10px;
    }
    
    .product-thumbnails::-webkit-scrollbar-thumb {
      background-color: #8b5a2b;
      border-radius: 10px;
    }
    
    .thumbnail-container {
      width: 90px;
      height: 90px;
      overflow: hidden;
      border-radius: 8px;
      transition: all 0.3s ease;
      flex-shrink: 0;
    }
    
    .thumbnail-container:hover {
      transform: translateY(-3px);
    }
    
    .product-thumbnail {
      width: 100%;
      height: 100%;
      object-fit: cover;
      cursor: pointer;
      transition: all 0.3s ease;
      border: 2px solid transparent;
    }
    
    .product-thumbnail.active {
      border-color: #8b5a2b;
      box-shadow: 0 5px 15px rgba(139, 90, 43, 0.2);
    }
    
    .product-title {
      font-family: 'Playfair Display', serif;
      font-weight: 700;
      font-size: 2.5rem;
      color: #33261d;
      margin-bottom: 1rem;
      line-height: 1.2;
      letter-spacing: -0.5px;
    }
    
    .product-category {
      margin-bottom: 1.5rem;
    }
    
    .product-category .badge {
      font-size: 0.85rem;
      padding: 0.5rem 1rem;
      background-color: #8b5a2b;
      font-weight: 500;
      letter-spacing: 0.5px;
      border-radius: 50px;
    }
    
    .product-pricing {
      margin-bottom: 2rem;
      padding: 1.5rem;
      background: linear-gradient(145deg, #fff, #f8f3ef);
      border-radius: 12px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.03);
    }
    
    .sale-price {
      font-weight: bold;
      color: #8b5a2b;
      font-size: 2.2rem;
      font-family: 'Playfair Display', serif;
    }
    
    .regular-price {
      color: #6c757d;
      font-size: 1.2rem;
    }
    
    .offer-badge {
      font-size: 0.75rem; 
      padding: 0.3rem 0.6rem; 
      background-color: #cec8b0;
      color: #000;
      border-radius: 20px;
      letter-spacing: 0.5px;
      line-height: 1;
      font-weight: 600;
      display: inline-block;
      margin-left: 0.5rem;
      vertical-align: middle;
    }
    
    .product-description {
      margin-bottom: 2.5rem;
      padding: 1.5rem;
      background-color: #fff;
      border-radius: 12px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.03);
    }
    
    .product-description h5 {
      font-family: 'Playfair Display', serif;
      color: #33261d;
      font-weight: 600;
      margin-bottom: 1rem;
      font-size: 1.5rem;
    }
    
    .product-description p {
      color: #5d534c;
      line-height: 1.8;
      font-size: 1.05rem;
    }
    
    .product-variants h5 {
      font-family: 'Playfair Display', serif;
      color: #33261d;
      font-weight: 600;
      margin-bottom: 1.5rem;
      font-size: 1.5rem;
    }
    
    .variant-cards-container {
      margin-bottom: 2rem;
    }
    
    .variant-card {
      cursor: pointer;
      transition: all 0.4s ease;
      border: 2px solid transparent;
      border-radius: 12px;
      overflow: hidden;
      height: 100%;
      background: linear-gradient(145deg, #fff, #f8f3ef);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    }
    
    .variant-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 12px 25px rgba(139, 90, 43, 0.15);
    }
    
    .variant-card.selected {
      border-color: #8b5a2b;
      background: linear-gradient(145deg, #fcf9f7, #f0e6dd);
    }
    
    .variant-card .card-body {
      padding: 1.5rem;
    }
    
    .variant-flavor {
      font-family: 'Playfair Display', serif;
      font-weight: 600;
      margin-bottom: 1.2rem;
      color: #33261d;
      font-size: 1.1rem;
    }
    
    .variant-details {
      margin-bottom: 1.5rem;
      color: #5d534c;
      font-size: 0.95rem;
      line-height: 1.6;
    }
    
    .variant-price {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      margin-bottom: 1.5rem;
    }
    
    .sale-price {
      font-weight: bold;
      color: #8b5a2b;
      font-size: 1.5rem;
      font-family: 'Playfair Display', serif;
      line-height: 1;
    }
    
    .regular-price {
      color: #6c757d;
      font-size: 0.9rem;
      line-height: 1;
    }
    
    .variant-card .offer-badge {
      font-size: 0.65rem; 
      padding: 0.25rem 0.5rem;
      background-color: #aca38bbc;
      border-radius: 15px; 
      letter-spacing: 0.5px;
      line-height: 1;
      display: inline-block;
      margin-top: 0.25rem;
      margin-left: 0;
    }
    
    .stock-info {
      font-size: 0.85rem;
      font-weight: 500;
      color: #28a745;
      margin-top: 0.8rem;
    }

    .quantity-selector {
      width: 180px !important;
      margin-bottom: 1.5rem;
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
    }
    
    .quantity-selector .form-control {
      text-align: center;
      font-weight: 600;
      border: none;
      height: 45px;
    }
    
    .quantity-selector .btn {
      width: 45px;
      background-color: #f0e6dd;
      border: none;
      color: #8b5a2b;
      font-weight: bold;
      transition: all 0.3s ease;
    }
    
    .quantity-selector .btn:hover {
      background-color: #8b5a2b;
      color: #fff;
    }
    
    .action-buttons {
      display: flex;
      gap: 1rem;
      flex-wrap: wrap;
    }
    
    .action-buttons .btn {
      padding: 0.75rem 1.5rem;
      font-weight: 600;
      border-radius: 8px;
      transition: all 0.3s ease;
      flex: 1;
      min-width: 180px;
    }
    
    .btn-primary {
      background-color: #8b5a2b;
      border-color: #8b5a2b;
    }
    
    .btn-primary:hover {
      background-color: #6d4621;
      border-color: #6d4621;
      transform: translateY(-3px);
      box-shadow: 0 8px 15px rgba(139, 90, 43, 0.25);
    }
    
    .btn-outline-danger {
      border-color: #dc3545;
      color: #dc3545;
    }
    
    .btn-outline-danger:hover {
      background-color: #dc3545;
      color: #fff;
      transform: translateY(-3px);
      box-shadow: 0 8px 15px rgba(220, 53, 69, 0.25);
    }

    .related-products {
      margin-top: 4rem;
      padding-top: 2rem;
      border-top: 1px solid #e9e2dc;
    }
    
    .section-title {
      font-family: 'Playfair Display', serif;
      color: #33261d;
      font-weight: 700;
      margin-bottom: 2rem;
      font-size: 2rem;
      text-align: center;
      position: relative;
      padding-bottom: 1rem;
    }
    
    .section-title:after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 50%;
      transform: translateX(-50%);
      width: 80px;
      height: 3px;
      background: linear-gradient(90deg, transparent, #8b5a2b, transparent);
    }
    
    .product-card {
      transition: all 0.4s ease;
      border: none;
      border-radius: 12px;
      overflow: hidden;
      height: 100%;
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
    }
    
    .product-card:hover {
      transform: translateY(-8px);
      box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
    }
    
    .product-card .card-img-top {
      height: 280px;
      object-fit: cover;
      transition: transform 0.5s ease;
    }
    
    .product-card:hover .card-img-top {
      transform: scale(1.05);
    }
    
    .product-card .card-body {
      padding: 1.5rem;
      background: linear-gradient(145deg, #fff, #f8f3ef);
    }
    
    .product-card .card-title {
      font-family: 'Playfair Display', serif;
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 0.75rem;
      color: #33261d;
    }
    
    .product-card .card-title a {
      text-decoration: none;
      color: inherit;
      transition: color 0.3s ease;
    }
    
    .product-card .card-title a:hover {
      color: #8b5a2b;
    }
    
    .product-card .card-text {
      color: #5d534c;
      margin-bottom: 1rem;
      line-height: 1.6;
    }
    
    .product-card .product-price {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .breadcrumb {
      padding: 1rem 1.5rem;
      background-color: #fff;
      border-radius: 8px;
      margin-bottom: 2rem;
      box-shadow: 0 3px 10px rgba(0, 0, 0, 0.03);
    }
    
    .breadcrumb-item a {
      color: #8b5a2b;
      text-decoration: none;
      transition: color 0.3s ease;
    }
    
    .breadcrumb-item a:hover {
      color: #6d4621;
      text-decoration: underline;
    }
    
    .breadcrumb-item.active {
      color: #5d534c;
    }
    
    /* Responsive Adjustments */
    @media (max-width: 991px) {
      .product-title {
        font-size: 2rem;
      }
      
      .main-image-container {
        height: 400px;
      }
      
      .zoom-result {
        display: none !important;
      }
    }
    
    @media (max-width: 767px) {
      .product-title {
        font-size: 1.75rem;
      }
      
      .main-image-container {
        height: 350px;
      }
      
      .section-title {
        font-size: 1.75rem;
      }
      
      .product-card .card-img-top {
        height: 220px;
      }
      
      .action-buttons .btn {
        width: 100%;
      }
    }
    
    @media (max-width: 576px) {
      .product-details-section {
        padding: 2rem 0;
      }
      
      .main-image-container {
        height: 300px;
      }
      
      .thumbnail-container {
        width: 70px;
        height: 70px;
      }
      
      .product-pricing {
        padding: 1rem;
      }
      
      .sale-price {
        font-size: 1.8rem;
      }
      
      .offer-badge {
        font-size: 0.65rem; 
        padding: 0.25rem 0.5rem; 
        border-radius: 15px;
      }
      
      .variant-card .offer-badge {
        font-size: 0.6rem; 
        padding: 0.2rem 0.4rem;
        border-radius: 12px;
      }
    }
  </style>

  <%- include('../partials/user/footer') %>
</body>
</html>