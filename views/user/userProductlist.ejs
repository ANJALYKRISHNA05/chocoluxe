<%- include('../partials/user/header') %>

<div class="product-listing-container">
    <!-- Sidebar Filters -->
    <div class="filters-sidebar">
        <div class="filters-header">
            <h3>Filter By</h3>
            <button id="clear-filters" class="clear-btn">Clear All</button>
        </div>

        <div class="filter-section">
            <h4>Categories</h4>
            <div class="filter-options">
                <% categories.forEach(category => { %>
                <div class="filter-option">
                    <input type="checkbox" id="category-<%= category._id %>" name="category" value="<%= category._id %>" <% if (selectedFilters.categories && selectedFilters.categories.includes(category._id.toString())) { %>checked<% } %>>
                    <label for="category-<%= category._id %>"><%= category.name %></label>
                </div>
                <% }) %>
            </div>
        </div>

        <div class="filter-section">
            <h4>Quantity</h4>
            <div class="filter-options">
                <div class="filter-option">
                    <input type="checkbox" id="weight-50g" name="weight" value="50" <% if (selectedFilters.weights && selectedFilters.weights.includes('50')) { %>checked<% } %>>
                    <label for="weight-50g">50gm</label>
                </div>
                <div class="filter-option">
                    <input type="checkbox" id="weight-100g" name="weight" value="100" <% if (selectedFilters.weights && selectedFilters.weights.includes('100')) { %>checked<% } %>>
                    <label for="weight-100g">100gm</label>
                </div>
                <div class="filter-option">
                    <input type="checkbox" id="weight-200g" name="weight" value="200" <% if (selectedFilters.weights && selectedFilters.weights.includes('200')) { %>checked<% } %>>
                    <label for="weight-200g">200gm</label>
                </div>
            </div>
        </div>

        <div class="filter-section">
            <h4>Flavors</h4>
            <div class="filter-options">
                <% flavors.forEach(flavor => { %>
                <div class="filter-option">
                    <input type="checkbox" id="flavor-<%= flavor %>" name="flavor" value="<%= flavor %>" <% if (selectedFilters.flavors && selectedFilters.flavors.includes(flavor)) { %>checked<% } %>>
                    <label for="flavor-<%= flavor %>"><%= flavor %></label>
                </div>
                <% }) %>
            </div>
        </div>

        <div class="filter-section">
            <h4>Sugar Level</h4>
            <div class="filter-options">
                <div class="filter-option">
                    <input type="checkbox" id="sugar-low" name="sugar" value="low" <% if (selectedFilters.sugarLevels && selectedFilters.sugarLevels.includes('low')) { %>checked<% } %>>
                    <label for="sugar-low">Low</label>
                </div>
                <div class="filter-option">
                    <input type="checkbox" id="sugar-medium" name="sugar" value="medium" <% if (selectedFilters.sugarLevels && selectedFilters.sugarLevels.includes('medium')) { %>checked<% } %>>
                    <label for="sugar-medium">Medium</label>
                </div>
                <div class="filter-option">
                    <input type="checkbox" id="sugar-free" name="sugar" value="sugar-free" <% if (selectedFilters.sugarLevels && selectedFilters.sugarLevels.includes('sugar-free')) { %>checked<% } %>>
                    <label for="sugar-free">Sugar-free</label>
                </div>
            </div>
        </div>

        <button id="apply-filters" class="apply-btn">APPLY</button>
    </div>

    <!-- Main Content Area -->
    <div class="products-container">
        <div class="products-header">
            <div class="products-count">
                <h2>All Chocolates</h2>
                <span><%= products.length %> products</span>
            </div>
            
            <div class="products-sorting">
                <select id="sort-products" class="sort-select">
                    <option value="newest" <% if (sortOption === 'newest') { %>selected<% } %>>Newest</option>
                    <option value="price-low-high" <% if (sortOption === 'price-low-high') { %>selected<% } %>>Price: Low to High</option>
                    <option value="price-high-low" <% if (sortOption === 'price-high-low') { %>selected<% } %>>Price: High to Low</option>
                    <option value="name-a-z" <% if (sortOption === 'name-a-z') { %>selected<% } %>>Name: A to Z</option>
                    <option value="name-z-a" <% if (sortOption === 'name-z-a') { %>selected<% } %>>Name: Z to A</option>
                </select>
                <div class="view-toggle">
                    <button class="grid-view active" title="Grid View"><i class="fas fa-th"></i></button>
                    <button class="list-view" title="List View"><i class="fas fa-list"></i></button>
                </div>
            </div>
        </div>

        <% if (products.length === 0) { %>
            <div class="no-products-found">
                <i class="fas fa-search"></i>
                <h3>No products found</h3>
                <p>Try adjusting your filters or check back later for new additions.</p>
                <button id="reset-search" class="btn btn-outline-primary">Reset Filters</button>
            </div>
        <% } else { %>
            <div class="products-grid">
                <% products.forEach(product => { %>
                    <div class="product-card">
                        <div class="product-image">
                            <img src="<%= product.variants[0].productImage[0] || '/images/placeholder.jpg' %>" alt="<%= product.productName %>">
                            <div class="product-actions">
                                <button class="action-btn wishlist-btn" title="Add to Wishlist">
                                    <i class="fas fa-heart"></i>
                                </button>
                                <button class="action-btn quickview-btn" title="Quick View" data-product-id="<%= product._id %>">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                        </div>
                        <div class="product-info">
                            <h3 class="product-name"><%= product.productName %></h3>
                            <p class="product-variant"><%= product.variants[0].flavor %> - <%= product.variants[0].weight %>g</p>
                            <div class="product-price-actions">
                                <span class="product-price">$<%= product.variants[0].salePrice.toFixed(2) %></span>
                                <a href="/product/<%= product._id %>" class="btn btn-outline-primary view-btn">View</a>
                            </div>
                        </div>
                    </div>
                <% }) %>
            </div>
        <% } %>

        <!-- Pagination -->
        <% if (totalPages > 1) { %>
            <div class="pagination">
                <% if (currentPage > 1) { %>
                    <a href="?page=<%= currentPage - 1 %><%= queryParams %>" class="page-link prev">
                        <i class="fas fa-chevron-left"></i> Previous
                    </a>
                <% } %>
                
                <div class="page-numbers">
                    <% for (let i = 1; i <= totalPages; i++) { %>
                        <% if (i === currentPage) { %>
                            <span class="page-link current"><%= i %></span>
                        <% } else { %>
                            <a href="?page=<%= i %><%= queryParams %>" class="page-link"><%= i %></a>
                        <% } %>
                    <% } %>
                </div>
                
                <% if (currentPage < totalPages) { %>
                    <a href="?page=<%= currentPage + 1 %><%= queryParams %>" class="page-link next">
                        Next <i class="fas fa-chevron-right"></i>
                    </a>
                <% } %>
            </div>
        <% } %>
    </div>
</div>

<style>
    /* Product Listing Page Styles */
    .product-listing-container {
        display: flex;
        gap: 30px;
        max-width: 1400px;
        margin: 30px auto;
        padding: 0 15px;
    }
    
    /* Filters Sidebar */
    .filters-sidebar {
        flex: 0 0 260px;
        background-color: #f8f5f2;
        border-radius: 10px;
        padding: 20px;
        height: fit-content;
        position: sticky;
        top: 100px;
    }
    
    .filters-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        border-bottom: 1px solid #e5d6c1;
        padding-bottom: 10px;
    }
    
    .filters-header h3 {
        font-size: 1.2rem;
        font-weight: 700;
        color: #4a2c2a;
        margin: 0;
    }
    
    .clear-btn {
        background: none;
        border: none;
        color: #d1a876;
        font-size: 0.8rem;
        cursor: pointer;
        padding: 0;
    }
    
    .clear-btn:hover {
        color: #4a2c2a;
        text-decoration: underline;
    }
    
    .filter-section {
        margin-bottom: 20px;
        border-bottom: 1px solid #e5d6c1;
        padding-bottom: 15px;
    }
    
    .filter-section:last-of-type {
        border-bottom: none;
    }
    
    .filter-section h4 {
        font-size: 1rem;
        font-weight: 600;
        color: #4a2c2a;
        margin-bottom: 12px;
    }
    
    .filter-options {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }
    
    .filter-option {
        display: flex;
        align-items: center;
    }
    
    .filter-option input[type="checkbox"] {
        margin-right: 10px;
        appearance: none;
        width: 16px;
        height: 16px;
        border: 2px solid #d1a876;
        border-radius: 3px;
        background-color: white;
        cursor: pointer;
        position: relative;
    }
    
    .filter-option input[type="checkbox"]:checked {
        background-color: #4a2c2a;
        border-color: #4a2c2a;
    }
    
    .filter-option input[type="checkbox"]:checked::after {
        content: '\2713';
        color: white;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 12px;
    }
    
    .filter-option label {
        font-size: 0.9rem;
        color: #333;
        cursor: pointer;
    }
    
    .apply-btn {
        width: 100%;
        background-color: #000;
        color: white;
        border: none;
        border-radius: 5px;
        padding: 12px;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.3s;
    }
    
    .apply-btn:hover {
        background-color: #333;
    }
    
    /* Products Container */
    .products-container {
        flex: 1;
    }
    
    .products-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
    }
    
    .products-count h2 {
        font-size: 1.5rem;
        margin: 0 0 5px 0;
        color: #4a2c2a;
    }
    
    .products-count span {
        color: #666;
        font-size: 0.9rem;
    }
    
    .products-sorting {
        display: flex;
        align-items: center;
        gap: 15px;
    }
    
    .sort-select {
        padding: 8px 15px;
        border: 1px solid #d1a876;
        border-radius: 5px;
        color: #4a2c2a;
        background-color: white;
        cursor: pointer;
        font-size: 0.9rem;
    }
    
    .view-toggle {
        display: flex;
        gap: 5px;
    }
    
    .view-toggle button {
        width: 38px;
        height: 38px;
        border: 1px solid #d1a876;
        background-color: white;
        border-radius: 5px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #4a2c2a;
    }
    
    .view-toggle button.active {
        background-color: #4a2c2a;
        color: white;
        border-color: #4a2c2a;
    }
    
    /* Products Grid */
    .products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 25px;
    }
    
    /* Products List View */
    .products-list .product-card {
        display: grid;
        grid-template-columns: 200px 1fr;
        gap: 20px;
    }
    
    .products-list .product-info {
        display: flex;
        flex-direction: column;
        justify-content: center;
    }
    
    /* Product Card */
    .product-card {
        background-color: white;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    
    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
    }
    
    .product-image {
        position: relative;
        height: 220px;
        overflow: hidden;
    }
    
    .product-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
    }
    
    .product-card:hover .product-image img {
        transform: scale(1.05);
    }
    
    .product-actions {
        position: absolute;
        top: 10px;
        right: 10px;
        display: flex;
        flex-direction: column;
        gap: 10px;
        opacity: 0;
        transition: opacity 0.3s ease;
    }
    
    .product-card:hover .product-actions {
        opacity: 1;
    }
    
    .action-btn {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        background-color: white;
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }
    
    .action-btn:hover {
        background-color: #4a2c2a;
        color: white;
    }
    
    .product-info {
        padding: 15px;
    }
    
    .product-name {
        font-size: 1rem;
        font-weight: 600;
        margin-bottom: 5px;
        color: #4a2c2a;
    }
    
    .product-variant {
        color: #666;
        font-size: 0.85rem;
        margin-bottom: 10px;
    }
    
    .product-price-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .product-price {
        font-size: 1.1rem;
        font-weight: 700;
        color: #4a2c2a;
    }
    
    .view-btn {
        padding: 5px 12px;
        font-size: 0.85rem;
        color: #4a2c2a;
        border-color: #4a2c2a;
        background-color: transparent;
        border-radius: 5px;
        text-decoration: none;
        transition: all 0.3s ease;
    }
    
    .view-btn:hover {
        background-color: #4a2c2a;
        color: white;
    }
    
    /* No Products Found */
    .no-products-found {
        text-align: center;
        padding: 60px 20px;
        background-color: #f8f5f2;
        border-radius: 10px;
    }
    
    .no-products-found i {
        font-size: 3rem;
        color: #d1a876;
        margin-bottom: 20px;
    }
    
    .no-products-found h3 {
        font-size: 1.5rem;
        color: #4a2c2a;
        margin-bottom: 10px;
    }
    
    .no-products-found p {
        color: #666;
        margin-bottom: 20px;
    }
    
    /* Pagination */
    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 40px;
        gap: 10px;
    }
    
    .page-numbers {
        display: flex;
        gap: 5px;
    }
    
    .page-link {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        border-radius: 5px;
        border: 1px solid #d1a876;
        color: #4a2c2a;
        text-decoration: none;
        font-size: 0.9rem;
        transition: all 0.3s ease;
    }
    
    .page-link.current {
        background-color: #4a2c2a;
        color: white;
        border-color: #4a2c2a;
    }
    
    .page-link:hover:not(.current) {
        background-color: #f0e0cd;
    }
    
    .page-link.prev, .page-link.next {
        width: auto;
        padding: 0 15px;
        gap: 5px;
    }
    
    /* Responsive Adjustments */
    @media (max-width: 991px) {
        .product-listing-container {
            flex-direction: column;
        }
        
        .filters-sidebar {
            flex: none;
            width: 100%;
            position: static;
            margin-bottom: 20px;
        }
        
        .products-grid {
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        }
    }
    
    @media (max-width: 768px) {
        .products-grid {
            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
            gap: 15px;
        }
        
        .products-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 15px;
        }
        
        .products-sorting {
            width: 100%;
            justify-content: space-between;
        }
        
        .sort-select {
            flex: 1;
        }
        
        .product-image {
            height: 180px;
        }
        
        .products-list .product-card {
            grid-template-columns: 120px 1fr;
        }
    }
    
    @media (max-width: 480px) {
        .products-grid {
            grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
            gap: 10px;
        }
        
        .product-image {
            height: 150px;
        }
        
        .product-info {
            padding: 10px;
        }
        
        .product-name {
            font-size: 0.9rem;
        }
        
        .product-variant {
            font-size: 0.75rem;
        }
        
        .product-price {
            font-size: 1rem;
        }
        
        .view-btn {
            padding: 3px 8px;
            font-size: 0.75rem;
        }
        
        .pagination {
            flex-wrap: wrap;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // View toggle functionality
        const gridViewBtn = document.querySelector('.grid-view');
        const listViewBtn = document.querySelector('.list-view');
        const productsGrid = document.querySelector('.products-grid');
        
        gridViewBtn.addEventListener('click', function() {
            productsGrid.classList.remove('products-list');
            gridViewBtn.classList.add('active');
            listViewBtn.classList.remove('active');
            
            // Store preference in localStorage
            localStorage.setItem('chocoluxe-view-preference', 'grid');
        });
        
        listViewBtn.addEventListener('click', function() {
            productsGrid.classList.add('products-list');
            listViewBtn.classList.add('active');
            gridViewBtn.classList.remove('active');
            
            // Store preference in localStorage
            localStorage.setItem('chocoluxe-view-preference', 'list');
        });
        
        // Load view preference from localStorage
        const viewPreference = localStorage.getItem('chocoluxe-view-preference');
        if (viewPreference === 'list') {
            productsGrid.classList.add('products-list');
            listViewBtn.classList.add('active');
            gridViewBtn.classList.remove('active');
        }
        
        // Sorting functionality
        const sortSelect = document.getElementById('sort-products');
        sortSelect.addEventListener('change', function() {
            applyFiltersAndSort();
        });
        
        // Filter functionality
        const filterForm = document.createElement('form');
        filterForm.id = 'filter-form';
        filterForm.method = 'GET';
        filterForm.action = window.location.pathname;
        document.body.appendChild(filterForm);
        
        const applyFiltersBtn = document.getElementById('apply-filters');
        applyFiltersBtn.addEventListener('click', function() {
            applyFiltersAndSort();
        });
        
        const clearFiltersBtn = document.getElementById('clear-filters');
        clearFiltersBtn.addEventListener('click', function() {
            // Clear all checkboxes
            document.querySelectorAll('.filter-option input[type="checkbox"]').forEach(checkbox => {
                checkbox.checked = false;
            });
            
            // Apply the cleared filters
            applyFiltersAndSort();
        });
        
        const resetSearchBtn = document.getElementById('reset-search');
        if (resetSearchBtn) {
            resetSearchBtn.addEventListener('click', function() {
                window.location.href = window.location.pathname;
            });
        }
        
        // Apply filters and sorting
        function applyFiltersAndSort() {
            const filterForm = document.getElementById('filter-form');
            filterForm.innerHTML = '';
            
            // Get selected categories
            const selectedCategories = Array.from(document.querySelectorAll('input[name="category"]:checked')).map(el => el.value);
            selectedCategories.forEach(category => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'category';
                input.value = category;
                filterForm.appendChild(input);
            });
            
            // Get selected weights
            const selectedWeights = Array.from(document.querySelectorAll('input[name="weight"]:checked')).map(el => el.value);
            selectedWeights.forEach(weight => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'weight';
                input.value = weight;
                filterForm.appendChild(input);
            });
            
            // Get selected flavors
            const selectedFlavors = Array.from(document.querySelectorAll('input[name="flavor"]:checked')).map(el => el.value);
            selectedFlavors.forEach(flavor => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'flavor';
                input.value = flavor;
                filterForm.appendChild(input);
            });
            
            // Get selected sugar levels
            const selectedSugars = Array.from(document.querySelectorAll('input[name="sugar"]:checked')).map(el => el.value);
            selectedSugars.forEach(sugar => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'sugar';
                input.value = sugar;
                filterForm.appendChild(input);
            });
            
            // Get sorting option
            const sortOption = document.getElementById('sort-products').value;
            const sortInput = document.createElement('input');
            sortInput.type = 'hidden';
            sortInput.name = 'sort';
            sortInput.value = sortOption;
            filterForm.appendChild(sortInput);
            
            // Submit the form
            filterForm.submit();
        }
        
        // Wishlist and quick view functionality
        const wishlistButtons = document.querySelectorAll('.wishlist-btn');
        wishlistButtons.forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                // Here you would implement wishlist functionality
                this.classList.toggle('active');
                if (this.classList.contains('active')) {
                    this.innerHTML = '<i class="fas fa-heart" style="color: #d1a876;"></i>';
                } else {
                    this.innerHTML = '<i class="fas fa-heart"></i>';
                }
            });
        });
        
        const quickViewButtons = document.querySelectorAll('.quickview-btn');
        quickViewButtons.forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                const productId = this.getAttribute('data-product-id');
                // Here you would implement quick view functionality
                console.log('Quick view for product:', productId);
                // Example: Open a modal with product details
            });
        });
    });
</script>
<%- include('../partials/user/footer') %>